recode_city_state_to_zipcode <- function(city="kona", state_abb="hi"){ # {city="bedford park"; state_abb="il"}
# catn('city'); print(city); catn('state_abb'); print(state_abb)
if(length(city)>1|length(state_abb)>1){cat('\nALERT: Did you forget to make your dataframe rowwise() before running recode_city_state_to_zipcode()??\n')}
if(tolower(city) != 'remote'&tolower(city) != '.*'){
# if(!exists('zip_code_db')){
#   # zip_puma_ref <- geocorr::zcta2010_to_puma2012 %>% select(-matches('intpt|pop10|afact')) %>% mutate(zip = zcta5) %>% mutate_all(function(v) tolower(iconv(enc2utf8(v))))
#   zip_code_db <<- (zip_code_db_github <- read_csv('https://raw.githubusercontent.com/DataUSA/datausa-tutorials/master/commuting_viz_tutorial/csv/zip_code_database.csv') %>% mutate(major_city=primary_city, zipcode=pad_leading_0s(zip), lat=latitude, lng=longitude, common_city_list=acceptable_cities %>% blob::vec_cast.blob() ) %>%select(-one_of(setdiff(names(.), names(zipcodeR::zip_code_db)))) %>% mutate(post_office_city = major_city )) %>% bind_rows(zipcodeR::zip_code_db, .) %>% as_tibble()
# }
result <- tryCatch({
zipcodeR::search_city(tools::toTitleCase(city), state_abb) %>% mutate_all(as.character) %>% mutate_at(vars(one_of('zipcode')), function(v) pad_leading_0s(v, 5)) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e) {print(e); NA}) # summarize(state_puma = paste0(sort(unique(state_puma)), collapse=", "))#group_by(primary_city, state) %>%
if(is.na(result)|nchar(result)==5){
result_ <- tryCatch({
CityName <- gsub(' ','%20', city) #remove space for URLs
URL <- paste0("http://photon.komoot.io/api/?q=", CityName, "?state=", state_abb)
(res <- jsonlite::fromJSON(rawToChar(httr::GET(URL)$content))$features %>% .[c('properties', 'geometry')] %>% unlist(., recursive=F) %>% as_tibble() %>% janitor::clean_names() %>% filter(grepl(paste0(abbtostate(state_abb),"|^",state_abb, "$"), properties_state, ignore.case=T)) %>% select(matches('city|state|zip|post'), everything()))
result_ <- res %>% drop_na(properties_postcode) %>% filter(!duplicated(properties_postcode)) %>% slice(1:3) %>% mutate(zipcode = as.character(srhoads::zipcode5(properties_postcode))) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
result_
}, error=function(e) {print(e); NA})
if(!is.na(result_)&!is.na(result)){
result <- paste0(result, ", ", result_) %>% unique_sep_sort(., ', ') %>% na_if('NA')
} else if(is.na(result)) {
result <- result_
}
}
if(is.na(result)){
# xmlToList <- XML::xmlToList
pkg('XML')
result <- tryCatch({ # remotes::install_github("hansthompson/rusps")
rusps::validate_address_usps(street='1 1st St', city=city, state=state_abb, username='448JL0000161') %>% as_tibble() %>%
mutate_all(., function(v) recode_na(as.character(v), 'NA')) %>% #.$Zip5 %>% na.omit()
select(zip=Zip5) %>% drop_na(zip) %>% .$zip %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e){NA})
}
if(is.na(result)){ # city="milton"; state_abb="ga"
result <- tryCatch({
geocorr::zcta2010_to_puma2012 %>% janitor::clean_names() %>% mutate_all(function(v) tolower(iconv(enc2utf8(v)))) %>% rename(zipcode=zcta5) %>% select(matches('stab|puma|name|zip')) %>%
filter(tolower(stab)==tolower(state_abb),
grepl(paste0("\\b", city, "\\b"), zipname, ignore.case=T)
) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
result <- tryCatch({
geocorr::zcta2010_to_puma2012 %>% janitor::clean_names() %>% mutate_all(function(v) tolower(iconv(enc2utf8(v)))) %>% rename(zipcode=zcta5) %>% select(matches('stab|puma|name|zip')) %>%
filter(tolower(stab)==tolower(state_abb),
grepl(paste0("\\b", city %>% strip_punct(replacewith = ".*"), "\\b"), zipname, ignore.case=T)
) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
result <- tryCatch({
geocorr::zcta2010_to_puma2012 %>% janitor::clean_names() %>% mutate_all(function(v) tolower(iconv(enc2utf8(v)))) %>% rename(zipcode=zcta5) %>% select(matches('stab|puma|name|zip')) %>%
filter(tolower(stab)==tolower(state_abb),
grepl(paste0("\\b", city %>% strip_punct(replacewith = ".*"), ""), zipname, ignore.case=T)
) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
city_stripped <- trimws_(gsub("\\b(mt|ft|pt|st|west|south|north|east|sw|ne|nw|se|mount|fort|port|saint|township|new|lake of the|city(| of))\\b", "", tolower(city)))
result <- tryCatch({
geocorr::zcta2010_to_puma2012 %>% janitor::clean_names() %>% mutate_all(function(v) tolower(iconv(enc2utf8(v)))) %>% rename(zipcode=zcta5) %>% select(matches('stab|puma|name|zip')) %>%
filter(tolower(stab)==tolower(state_abb),
grepl(paste0("\\b", city_stripped), zipname, ignore.case=T)
) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
result <- tryCatch({
geocorr::zcta2010_to_puma2012 %>% janitor::clean_names() %>% mutate_all(function(v) tolower(iconv(enc2utf8(v)))) %>% rename(zipcode=zcta5) %>% select(matches('stab|puma|name|zip')) %>%
filter(tolower(stab)==tolower(state_abb),
grepl(paste0("\\b", city_stripped), pum_aname, ignore.case=T)
) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
addrs <- c('1000 1st','1000 2nd', '1000 3rd', '1000 4th', '1000 5th', '1000 Park', '1000 Main', '1000 Oak', '1000 Pine', '7499 Donna')
for(addr in addrs){
if(is.na(result)){
result <- tryCatch({
rusps::validate_address_usps(street=addr, city=city, state=state_abb, username='448JL0000161') %>% as_tibble() %>%
mutate_all(., function(v) recode_na(as.character(v), 'NA')) %>% #.$Zip5 %>% na.omit()
select(zipcode=Zip5) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e){NA})
}
}
}
if(is.na(result)){
result <- tryCatch({
pkg('noncensus'); # install.packages('https://cran.r-project.org/src/contrib/Archive/noncensus/noncensus_0.1.tar.gz', repos=NULL)
city_str <- city
data(zip_codes)
result <- zip_codes %>%
mutate(city_state = paste0(city, ', ', state)) %>%
filter_if(is.factorchar, any_vars(grepl(paste0(city_str, '.*', state_abb), ., ignore.case=T))) %>% as_tibble() %>%
mutate_all(., function(v) recode_na(as.character(v), 'NA')) %>% #.$Zip5 %>% na.omit()
select(zipcode=zip) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
result
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
# pkg('usa')
result <- tryCatch({
city_str <- city
result <- usa::zipcodes %>%
mutate(city_state = paste0(city, ', ', state)) %>%
filter_if(is.factorchar, any_vars(grepl(paste0(city_str, '.*', state_abb), ., ignore.case=T))) %>% as_tibble() %>%
mutate_all(., function(v) recode_na(as.character(v), 'NA')) %>% #.$Zip5 %>% na.omit()
select(zipcode=zip) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
result
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
result <- tryCatch({
CityName <- gsub(' ','%20', city) #remove space for URLs
URL <- paste0("http://photon.komoot.io/api/?q=", CityName, "?state=", state_abb)
(res <- jsonlite::fromJSON(rawToChar(httr::GET(URL)$content))$features %>% .[c('properties', 'geometry')] %>% unlist(., recursive=F) %>% as_tibble() %>% janitor::clean_names() %>% filter(grepl(paste0(abbtostate(state_abb),"|^",state_abb, "$"), properties_state, ignore.case=T)) %>% select(matches('city|state|zip|post'), everything()))
result <- res  %>% mutate(zipcode = as.character(srhoads::zipcode5(properties_postcode))) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
result
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
result <- tryCatch({
# pkg('noncensus'); # install.packages('https://cran.r-project.org/src/contrib/Archive/noncensus/noncensus_0.1.tar.gz', repos=NULL)
city_str <- city %>% gsub('\\b(S|m)(t)\\b', '\\1.*\\2 ', ., ignore.case=T) %>% strip_punct(replacewith = ".*") %>% paste0("\\b", ., "\\b") %>% trimws_()
result <- zip_codes %>%
mutate(city_state = paste0(city, ', ', state)) %>%
filter_if(is.factorchar, any_vars(grepl(paste0(city_str, '.*', state_abb), ., ignore.case=T))) %>% as_tibble() %>%
mutate_all(., function(v) recode_na(as.character(v), 'NA')) %>% #.$Zip5 %>% na.omit()
select(zipcode=zip) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
result
}, error=function(e) {print(e); NA})
}
if(is.na(result)){
# pkg('usa')
result <- tryCatch({
city_str <- city %>% gsub('\\b(St)\\b', 'S.*t ', ., ignore.case=T) %>% strip_punct(replacewith = ".*") %>% paste0("\\b", ., "\\b") %>% trimws_()
result <- usa::zipcodes %>%
mutate(city_state = paste0(city, ', ', state)) %>%
filter_if(is.factorchar, any_vars(grepl(paste0(city_str, '.*', state_abb), ., ignore.case=T))) %>% as_tibble() %>%
mutate_all(., function(v) recode_na(as.character(v), 'NA')) %>% #.$Zip5 %>% na.omit()
select(zipcode=zip) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
result
}, error=function(e) {print(e); NA})
}
if(is.na(result)){ # city="milton"; state_abb="ga"
city_str <- city %>% gsub('\\b(St)\\b', 'S.*t ', ., ignore.case=T) %>% strip_punct(replacewith = ".*") %>% paste0("\\b", ., "\\b") %>% trimws_()
result <- tryCatch({
geocorr::zcta2010_to_puma2012 %>% janitor::clean_names() %>% mutate_all(function(v) tolower(iconv(enc2utf8(v)))) %>% rename(zipcode=zcta5) %>% select(matches('stab|puma|name|zip')) %>%
filter(tolower(stab)==tolower(state_abb),
grepl(city_str, zipname, ignore.case=T)
) %>% .$zipcode %>% unique() %>% sort() %>%  paste0(., collapse=", ") %>% recode_na('')
}, error=function(e) {print(e); NA})
}
} else {
result <- NA
}
return(result)
}
puma_msa_ref
puma_msa_ref <- rio::import(file="https://usa.ipums.org/usa/resources/volii/MSA2013_PUMA2010_crosswalk.xls", which=1) %>% as_tibble() %>% janitor::clean_names() %>% select(-matches('populatin')) %>%
mutate_all(tolower) %>% select(-matches('population'))
puma_msa_ref
puma_msa_ref %>% filter(grepl('dist', state_name))
zip_puma_ref
geocorr::zcta2010_to_puma2012
zipcodeR::zcta_crosswalk
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_table()
puma_to_censustract_county
read_table
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_table(col_names=T)
puma_to_censustract_county
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T)
puma_to_censustract_county
zipcodeR::search_county
zipcodeR::search_county("001", "AL")
geocorr::county2014_to_puma2012
puma_to_censustract_county
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp))
puma_to_censustract_county
geocorr::county2014_to_puma2012
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14))
puma_to_censustract_county
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14)) %>%
select(-matches('afact|pop'))
puma_to_censustract_county
"https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp))
"https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14))
"https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14)) %>%
select(-matches('afact|pop'))
zipcodeR::zcta_crosswalk
zipcodeR::search_county("01001", "AL")
zipcodeR::search_county("Autauga", "AL")
zipcodeR::search_county("Autauga AL", "AL")
zipcodeR::search_county("Autauga AL", "AL")
puma_to_censustract_county
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14)) %>%
select(-matches('afact|pop')) %>%
mutate(county = gsub(' [[:alpha:]]{2}$', '', cntyname2))
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14)) %>%
select(-matches('afact|pop')) %>%
mutate(county = gsub(' [[:alpha:]]{2}$', '', cntyname2)) %>%
rowwise() %>%
mutate(zip = zipcodeR::search_county(county, stab) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>% paste0(., collapse=", "))
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14)) %>%
select(-matches('afact|pop')) %>%
mutate(county = gsub(' [[:alpha:]]{2}$', '', cntyname2)) %>%
rowwise() %>% mutate(zip = zipcodeR::search_county(county, stab) %>% drop_na(zipcode) %>% .$zipcode %>% unique() %>% sort() %>% paste0(., collapse=", ")) %>% ungroup()
zip_code_db
zip_puma_ref
zip_puma_ref
zip_code_db
setdiff(zip_code_db$zipcode, zip_puma_ref$zcta5)
zip_code_db$zipcode
zip_puma_ref$zcta5
geocorr::zcta2010_to_usd2014
geocorr::zcta2010_to_puma2000
geocorr::zcta2010_to_puma2012
bind_rows(geocorr::zcta2010_to_puma2012, geocorr::zcta2010_to_puma2000 %>% rename(puma12=puma2k))
bind_rows(geocorr::zcta2010_to_puma2012, geocorr::zcta2010_to_puma2000 %>% setNames(gsub('2k', '12', names(.))))
zip_puma_ref
zip_puma_ref <- bind_rows(geocorr::zcta2010_to_puma2012, geocorr::zcta2010_to_puma2000 %>% setNames(gsub('2kName', 'Name', names(.)) %>% gsub('2k', '12', .) )) %>% select(-matches('intpt|pop10|afact')) %>% mutate(zip=zcta5, zipcode=zcta5) %>% mutate_all(function(v) tolower(iconv(enc2utf8(v))))
zip_puma_ref
bind_rows(geocorr::zcta2010_to_puma2012, geocorr::zcta2010_to_puma2000 %>% setNames(gsub('2kName', 'name', names(.)) %>% gsub('2k', '12', .) )) %>% distinct()
distinct
zip_puma_ref <- bind_rows(geocorr::zcta2010_to_puma2012, geocorr::zcta2010_to_puma2000 %>% setNames(gsub('2kName', 'name', names(.)) %>% gsub('2k', '12', .) )) %>% distinct() %>% distinct(puma12, zcta5, .keep_all=T) %>% select(-matches('intpt|pop10|afact')) %>% mutate(zip=zcta5, zipcode=zcta5) %>% mutate_all(function(v) tolower(iconv(enc2utf8(v))))
zip_puma_ref
geocorr::zcta2010_to_puma2012
zip_puma_ref <- bind_rows(geocorr::zcta2010_to_puma2012, geocorr::zcta2010_to_puma2012 %>% setNames(gsub('2kName', 'name', names(.)) %>% gsub('2k', '12', .) )) %>% distinct() %>% distinct(puma12, zcta5, .keep_all=T) %>% select(-matches('intpt|pop10|afact')) %>% mutate(zip=zcta5, zipcode=zcta5) %>% mutate_all(function(v) tolower(iconv(enc2utf8(v))))
zip_puma_ref
zip_puma_ref <- bind_rows(geocorr::zcta2010_to_puma2012, geocorr::zcta2010_to_puma2000 %>% setNames(gsub('2kName', 'name', names(.)) %>% gsub('2k', '12', .) )) %>% distinct() %>% distinct(puma12, zcta5, .keep_all=T) %>% select(-matches('intpt|pop10|afact')) %>% mutate(zip=zcta5, zipcode=zcta5) %>% mutate_all(function(v) tolower(iconv(enc2utf8(v))))
puma_to_censustract_county <- "https://www2.census.gov/geo/docs/maps-data/data/rel/2010_Census_Tract_to_2010_PUMA.txt" %>% read_csv(col_names=T) %>% janitor::clean_names() %>%
mutate(state_county = paste0(statefp, countyfp)) %>%
left_join(., geocorr::county2014_to_puma2012 %>% mutate(state_county=county14)) %>%
select(-matches('afact|pop')) %>%
mutate(county = gsub(' [[:alpha:]]{2}$', '', cntyname2))
puma_to_censustract_county
zip_puma_ref
# 20227, 20520, 20565
zip_puma_ref %>% filter(grepl('20227|20520|20565', zipcode))
puma_to_censustract_county
zipcodeR::zcta_crosswalk
zipcodeR::zip_code_db
zipcodeR::zip_code_db %>% filter(grepl('^20', zipcode))
zipcodeR::zip_code_db %>% filter(grepl('^20(2|5)', zipcode))
zipcodeR::zip_code_db %>% filter(grepl('20227|20520|20565', zipcode))
zipcodeR::search_county("District of Columbia", "DC")
"EEO1_0636088_2019_2.pdf
EEO1_0636088_2019_3.pdf
EEO1_5315952_2019_4.pdf
EEO1_5474084_2019_4.pdf
EEO1_6116312_2019_4.pdf
EEO1_A417614_2019_4.pdf
EEO1_AG09314_2019_4.pdf
EEO1_CB21174_2019_8.pdf
EEO1_DC41105_2019_4.pdf
EEO1_DM44203_2019_4.pdf
EEO1_EB85042_2019_8.pdf
EEO1_EV73070_2019_4.pdf
EEO1_FN02725_2019_4.pdf
EEO1_GN66654_2019_4.pdf
EEO1_GN66710_2019_4.pdf
EEO1_GP22744_2019_4.pdf
EEO1_HF70871_2019_4.pdf
EEO1_HR61730_2019_4.pdf
EEO1_HV89344_2019_4.pdf
EEO1_HV89436_2019_4.pdf
EEO1_HV90107_2019_8.pdf
EEO1_JG00942_2019_4.pdf
EEO1_JG01142_2019_4.pdf
EEO1_JG01175_2019_8.pdf
EEO1_JG01186_2019_8.pdf
EEO1_JG01206_2019_8.pdf
EEO1_JG06015_2019_4.pdf
EEO1_L312081_2019_4.pdf
EEO1_L336620_2019_4.pdf
EEO1_N622081_2019_8.pdf
EEO1_T031042_2019_4.pdf
EEO1_T570262_2019_4.pdf"
"EEO1_0636088_2019_2.pdf
EEO1_0636088_2019_3.pdf
EEO1_5315952_2019_4.pdf
EEO1_5474084_2019_4.pdf
EEO1_6116312_2019_4.pdf
EEO1_A417614_2019_4.pdf
EEO1_AG09314_2019_4.pdf
EEO1_CB21174_2019_8.pdf
EEO1_DC41105_2019_4.pdf
EEO1_DM44203_2019_4.pdf
EEO1_EB85042_2019_8.pdf
EEO1_EV73070_2019_4.pdf
EEO1_FN02725_2019_4.pdf
EEO1_GN66654_2019_4.pdf
EEO1_GN66710_2019_4.pdf
EEO1_GP22744_2019_4.pdf
EEO1_HF70871_2019_4.pdf
EEO1_HR61730_2019_4.pdf
EEO1_HV89344_2019_4.pdf
EEO1_HV89436_2019_4.pdf
EEO1_HV90107_2019_8.pdf
EEO1_JG00942_2019_4.pdf
EEO1_JG01142_2019_4.pdf
EEO1_JG01175_2019_8.pdf
EEO1_JG01186_2019_8.pdf
EEO1_JG01206_2019_8.pdf
EEO1_JG06015_2019_4.pdf
EEO1_L312081_2019_4.pdf
EEO1_L336620_2019_4.pdf
EEO1_N622081_2019_8.pdf
EEO1_T031042_2019_4.pdf
EEO1_T570262_2019_4.pdf" %>% strsplit('\n')
"EEO1_0636088_2019_2.pdf
EEO1_0636088_2019_3.pdf
EEO1_5315952_2019_4.pdf
EEO1_5474084_2019_4.pdf
EEO1_6116312_2019_4.pdf
EEO1_A417614_2019_4.pdf
EEO1_AG09314_2019_4.pdf
EEO1_CB21174_2019_8.pdf
EEO1_DC41105_2019_4.pdf
EEO1_DM44203_2019_4.pdf
EEO1_EB85042_2019_8.pdf
EEO1_EV73070_2019_4.pdf
EEO1_FN02725_2019_4.pdf
EEO1_GN66654_2019_4.pdf
EEO1_GN66710_2019_4.pdf
EEO1_GP22744_2019_4.pdf
EEO1_HF70871_2019_4.pdf
EEO1_HR61730_2019_4.pdf
EEO1_HV89344_2019_4.pdf
EEO1_HV89436_2019_4.pdf
EEO1_HV90107_2019_8.pdf
EEO1_JG00942_2019_4.pdf
EEO1_JG01142_2019_4.pdf
EEO1_JG01175_2019_8.pdf
EEO1_JG01186_2019_8.pdf
EEO1_JG01206_2019_8.pdf
EEO1_JG06015_2019_4.pdf
EEO1_L312081_2019_4.pdf
EEO1_L336620_2019_4.pdf
EEO1_N622081_2019_8.pdf
EEO1_T031042_2019_4.pdf
EEO1_T570262_2019_4.pdf" %>% strsplit('\n') %>% unlist() %>% unique()
"EEO1_0636088_2019_2.pdf
EEO1_0636088_2019_3.pdf
EEO1_5315952_2019_4.pdf
EEO1_5474084_2019_4.pdf
EEO1_6116312_2019_4.pdf
EEO1_A417614_2019_4.pdf
EEO1_AG09314_2019_4.pdf
EEO1_CB21174_2019_8.pdf
EEO1_DC41105_2019_4.pdf
EEO1_DM44203_2019_4.pdf
EEO1_EB85042_2019_8.pdf
EEO1_EV73070_2019_4.pdf
EEO1_FN02725_2019_4.pdf
EEO1_GN66654_2019_4.pdf
EEO1_GN66710_2019_4.pdf
EEO1_GP22744_2019_4.pdf
EEO1_HF70871_2019_4.pdf
EEO1_HR61730_2019_4.pdf
EEO1_HV89344_2019_4.pdf
EEO1_HV89436_2019_4.pdf
EEO1_HV90107_2019_8.pdf
EEO1_JG00942_2019_4.pdf
EEO1_JG01142_2019_4.pdf
EEO1_JG01175_2019_8.pdf
EEO1_JG01186_2019_8.pdf
EEO1_JG01206_2019_8.pdf
EEO1_JG06015_2019_4.pdf
EEO1_L312081_2019_4.pdf
EEO1_L336620_2019_4.pdf
EEO1_N622081_2019_8.pdf
EEO1_T031042_2019_4.pdf
EEO1_T570262_2019_4.pdf" %>% strsplit('\n') %>% unlist() %>% unique()->va
"EEO1_0636088_2020_2.pdf
EEO1_0636088_2020_3.pdf
EEO1_5315952_2020_4.pdf
EEO1_5474084_2020_4.pdf
EEO1_6116312_2020_4.pdf
EEO1_A417614_2020_4.pdf
EEO1_AG09314_2020_4.pdf
EEO1_CB21174_2020_8.pdf
EEO1_DC41105_2020_4.pdf
EEO1_DM44203_2020_4.pdf
EEO1_EB85042_2020_8.pdf
EEO1_EV73070_2020_4.pdf
EEO1_FN02725_2020_4.pdf
EEO1_GN66654_2020_4.pdf
EEO1_GN66710_2020_4.pdf
EEO1_HF70871_2020_4.pdf
EEO1_HR61730_2020_4.pdf
EEO1_HV89344_2020_4.pdf
EEO1_HV89436_2020_4.pdf
EEO1_JG00942_2020_4.pdf
EEO1_JG01142_2020_4.pdf
EEO1_JG01175_2020_8.pdf
EEO1_JG01186_2020_8.pdf
EEO1_JG01206_2020_8.pdf
EEO1_JG06015_2020_4.pdf
EEO1_L312081_2020_4.pdf
EEO1_L336620_2020_8.pdf
EEO1_N622081_2020_8.pdf
EEO1_T031042_2020_4.pdf
EEO1_T570262_2020_4.pdf" %>% strsplit('\n') %>% unlist() %>% unique()->vb
setdiff(va, vb)
va
vb
"/Users/rhoadss/jl/anonymized/unionization/UNIONIZATION-CAMPAIGN-DEMO.xlsx"
d0 <- readxl::read_xlsx("/Users/rhoadss/jl/anonymized/unionization/UNIONIZATION-CAMPAIGN-DEMO.xlsx") %>% janitor::clean_names()
d0
d0 %>%
# rowwise() %>%
group_by(department) %>%
mutate(department0 = sample(paste0("Department ", 1:20), 1))
recode_df <- d0 %>%
# rowwise() %>%
group_by(department) %>%
mutate(department0 = sample(paste0("Department ", 1:20), 1)) %>%
ungroup() %>%
select(matches('department'))
recode_df
recode_df %>% sumry(20)
recode_df <- d0 %>%
# rowwise() %>%
group_by(department) %>%
mutate(department0 = sample(paste0("Department ", 1:10), 1)) %>%
ungroup() %>%
select(matches('department'))
recode_df %>% sumry(20)
recode_df <- d0 %>%
# rowwise() %>%
group_by(department) %>%
mutate(department0 = sample(paste0("Department ", 1:8), 1)) %>%
ungroup() %>%
select(matches('department'))
recode_df %>% sumry(20)
recode_df <- d0 %>%
# rowwise() %>%
group_by(department) %>%
mutate(department0 = sample(paste0("Department ", 1:7), 1)) %>%
ungroup() %>%
select(matches('department'))
recode_df %>% sumry(20)
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department))))
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department))))
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department)))) %>% select(1:10)
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department)))) %>% sumry(50)
sample_company_df <- readr::read_csv("https://raw.githubusercontent.com/shutterstock/opentree/master/src/main/resources/employees.csv")
sample_company_df$sample_company_df <- readr::read_csv("https://raw.githubusercontent.com/shutterstock/opentree/master/src/main/resources/employees.csv") %>% janitor::clean_names()
sample_company_df <- readr::read_csv("https://raw.githubusercontent.com/shutterstock/opentree/master/src/main/resources/employees.csv") %>% janitor::clean_names()
sample_company_df
sample_company_df$cost_center_hierarchy
sample_company_df$cost_center_hierarchy %>% unique() %>% edit()
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department)))) %>%
mutate_at(vars(matches("title")), function(v) v %>% sample(c("Administration", "Engineering", "Finance", "Sales", "Product", "Legal"), 1))
# rowwise() %>%
# group_by(department) %>%
# mutate(department0 = sample(paste0("Department ", 1:7), 1)) %>%
# ungroup() %>%
select(matches('department|title'))
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department)))) %>%
rowwise() %>%
mutate_at(vars(matches("title")), function(v) v %>% sample(c("Administration", "Engineering", "Finance", "Sales", "Product", "Legal"), 1))
# group_by(department) %>%
# mutate(department0 = sample(paste0("Department ", 1:7), 1)) %>%
ungroup() %>%
select(matches('department|title'))
d0 <- readxl::read_xlsx("UNIONIZATION-CAMPAIGN-DEMO.xlsx") %>% janitor::clean_names()
sample_company_df <- readr::read_csv("https://raw.githubusercontent.com/shutterstock/opentree/master/src/main/resources/employees.csv") %>% janitor::clean_names()
# recode_df <-
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department)))) %>%
rowwise() %>%
mutate_at(vars(matches("title")), function(v) v %>% sample(c("Administration", "Engineering", "Finance", "Sales", "Product", "Legal"), 1))
# group_by(department) %>%
# mutate(department0 = sample(paste0("Department ", 1:7), 1)) %>%
ungroup() %>%
select(matches('department|title'))
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department)))) %>%
rowwise()
d0 %>%
mutate(department = paste0("Department ", as.numeric(as.factor(department)))) %>%
rowwise() %>%
mutate_at(vars(matches("title")), function(v) sample(c("Administration", "Engineering", "Finance", "Sales", "Product", "Legal"), 1))
# group_by(department) %>%
# mutate(department0 = sample(paste0("Department ", 1:7), 1)) %>%
ungroup() %>%
select(matches('department|title'))
