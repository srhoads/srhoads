if(unique_sep_sort_str){
v_ <- unique_sep_sort(v_, sep=collapse)
}
if(length(recode_na_vals)>0){
v_ <- recode_na(v_, recode_na_vals)
}
})
if(ungroup){
d <- ungroup(d)
}
return(d)
}
#' Samantha Rhoads's function to summarize_all remaining columns in a grouped df by pasting their unique values
#' @export
#' @examples
#' summarize_all_paste0(.tbl, .funs, ..., collapse=", ", unique_sep_sort_str=T, recode_na_vals=c("", "NA"), ungroup=F)
summarize_all_paste0 <- function(.tbl, .funs, ..., collapse=", ", unique_sep_sort_str=T, recode_na_vals=c("", "NA"), ungroup=F){
# lifecycle::signal_superseded("1.0.0", "summarise_all()", "across()")
# funs <- manip_all(.tbl, .funs, enquo(.funs), caller_env(), ..., .caller = "summarise_all")
# summarise(.tbl, !!!funs)
d <- dplyr::summarize_all(.tbl, function(v){
v_ <- paste0(sort(unique(v)), collapse=collapse)
if(unique_sep_sort_str){
v_ <- unique_sep_sort(v_, sep=collapse)
}
if(length(recode_na_vals)>0){
v_ <- recode_na(v_, recode_na_vals)
}
})
if(ungroup){
d <- ungroup(d)
}
return(d)
}
state2abb_or_abb2state
v
v <- c("CA", "Cali", "California")
all(is.numeric(v))|all(lookslike_number(v))
if(all(is.numeric(v))|all(lookslike_number(v))){
v <- state_names_abbs_df$state_abbs[match(readr::parse_number(as.character(v)), readr::parse_number(as.character(state_names_abbs_df$state_fips)))]
}
result
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' state2abb_or_abb2state(v, abb=F)
state2abb_or_abb2state <- function(v, abb=F, state_names_abbs_df=get_states(return_which='both')){
v_ <- tolower(v)
# state_names_abbs_df <- get_states(return_which='both')
# # state_names <- c(state.name[order(nchar(state.name), state.name, decreasing=T)], 'District of Columbia', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'United States Virgin Islands', 'Virgin Islands', 'American Samoa')
# addl_states <- c("S Carolina", "N Carolina", "W Virginia", "N Hampshire", "S Dakota", "N Dakota", "N Mexico", "N Jersey", "N York")
## state_names <- c(state_names, addl_states)
## state_abbs <- c(state.abb, 'DC', 'PR', 'VI', 'AS')
if(any(!tolower(v) %in% tolower(c(state_names_abbs_df$state_names, state_names_abbs_df$state_abbs)))){v_ <- gsub('united states', 'us', v_)}
st1 <- statetoabb(v_) %>% abbtostate()
st2 <- abbtostate(v_)
result <- if(!abb){ ifelse(is.na(st1), st2, st1)} else {statetoabb(ifelse(is.na(st1), st2, st1))}
# if(any(!(result %in% unlist(state_names_abbs_df) ) )){
#   state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands"), state_abbs=c("CA", "MP"), state_fips=c("06", "69"))
# }
return(result)
}
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
state_names_abbs_df=get_states(return_which='both')
to_fips=F
abb=T
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
result
state_names_abbs_df
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
state_names_abbs_df2
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
result
v
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
state_names_abbs_df
state_names_abbs_df2
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' state2abb_or_abb2state(v, abb=F)
state2abb_or_abb2state <- function(v, abb=F, state_names_abbs_df=get_states(return_which='both')){
v_ <- tolower(v)
# state_names_abbs_df <- get_states(return_which='both')
# # state_names <- c(state.name[order(nchar(state.name), state.name, decreasing=T)], 'District of Columbia', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'United States Virgin Islands', 'Virgin Islands', 'American Samoa')
# addl_states <- c("S Carolina", "N Carolina", "W Virginia", "N Hampshire", "S Dakota", "N Dakota", "N Mexico", "N Jersey", "N York")
## state_names <- c(state_names, addl_states)
## state_abbs <- c(state.abb, 'DC', 'PR', 'VI', 'AS')
if(any(!tolower(v) %in% tolower(c(state_names_abbs_df$state_names, state_names_abbs_df$state_abbs)))){v_ <- gsub('united states', 'us', v_)}
st1 <- statetoabb(v_) %>% abbtostate()
st2 <- abbtostate(v_)
result <- if(!abb){ ifelse(is.na(st1), st2, st1)} else {statetoabb(ifelse(is.na(st1), st2, st1))}
# if(any(!(result %in% unlist(state_names_abbs_df) ) )){
#   state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands"), state_abbs=c("CA", "MP"), state_fips=c("06", "69"))
# }
return(result)
}
#' Samantha Rhoads's function to...
#' @export
#' @examples
#' statetoabb(v)
statetoabb <- function (v, st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
"Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
"District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam"
), ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
"MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
"DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")) {
v_ <- strip_punct(tolower(v), replacewithspace=F)
st <- st %>% tolower() %>% strip_punct(., replacewithspace=F)
ab <- toupper(ab)
result <- ab[match(v_, st)]
ifelse(is.na(result), v, result)
}
get_states(return_which='both')
#' Samantha Rhoads's function to...
#' @export
#' @examples
#' abbtostate(v)
abbtostate <- function (v, state_names_abbs_df=get_states(return_which='both')) {
v_ <- strip_punct(tolower(v), replacewithspace=F)
# state_names_abbs_df <- get_states(return_which='both')
st <- state_names_abbs_df$state_names
ab <- state_names_abbs_df$state_abbs %>% tolower() %>% strip_punct(., replacewithspace=F)
result <- st[match(v_, ab)]
ifelse(is.na(result), v, result)
}
#' Samantha Rhoads's function to...
#' @export
#' @examples
#' statetoabb(v)
statetoabb <- function (v, st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
"Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
"District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam"
), ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
"MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
"DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")) {
v_ <- strip_punct(tolower(v), replacewithspace=F)
st <- st %>% tolower() %>% strip_punct(., replacewithspace=F)
ab <- toupper(ab)
result <- ab[match(v_, st)]
ifelse(is.na(result), v, result)
}
statetoabb
#' Samantha Rhoads's function to...
#' @export
#' @examples
#' statetoabb(v)
statetoabb <- function (v, state_names_abbs_df=get_states(return_which='both')) {
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
v_ <- strip_punct(tolower(v), replacewithspace=F)
from <- st <- tolower(state_names_abbs_df$state_names) %>% strip_punct(., replacewithspace=F)
to <- ab <- toupper(state_names_abbs_df$state_abbs)
result <- to[match(v_, from)]
ifelse(is.na(result), v, result)
}
#' Samantha Rhoads's function to...
#' @export
#' @examples
#' abbtostate(v)
abbtostate <- function (v, state_names_abbs_df=get_states(return_which='both')) {
v_ <- strip_punct(tolower(v), replacewithspace=F)
to <- st <- state_names_abbs_df$state_names
from <- ab <- tolower(state_names_abbs_df$state_abbs) %>% strip_punct(., replacewithspace=F)
result <- to[match(v_, from)]
ifelse(is.na(result), v, result)
}
v_ <- tolower(v)
# state_names_abbs_df <- get_states(return_which='both')
# # state_names <- c(state.name[order(nchar(state.name), state.name, decreasing=T)], 'District of Columbia', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'United States Virgin Islands', 'Virgin Islands', 'American Samoa')
# addl_states <- c("S Carolina", "N Carolina", "W Virginia", "N Hampshire", "S Dakota", "N Dakota", "N Mexico", "N Jersey", "N York")
## state_names <- c(state_names, addl_states)
## state_abbs <- c(state.abb, 'DC', 'PR', 'VI', 'AS')
if(any(!tolower(v) %in% tolower(c(state_names_abbs_df$state_names, state_names_abbs_df$state_abbs)))){v_ <- gsub('united states', 'us', v_)}
st1 <- statetoabb(v_, state_names_abbs_df=state_names_abbs_df) %>% abbtostate(., state_names_abbs_df=state_names_abbs_df)
st2 <- abbtostate(v_, state_names_abbs_df=state_names_abbs_df)
result <- if(!abb){ ifelse(is.na(st1), st2, st1)} else {statetoabb(ifelse(is.na(st1), st2, st1), state_names_abbs_df=state_names_abbs_df)}
result
if(all(is.numeric(v))|all(lookslike_number(v))){
v <- state_names_abbs_df$state_abbs[match(readr::parse_number(as.character(v)), readr::parse_number(as.character(state_names_abbs_df$state_fips)))]
}
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
result
any(!(result %in% unlist(state_names_abbs_df) ) )
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
}
result
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' state2abb_or_abb2state(v, abb=F)
state2abb_or_abb2state <- function(v, abb=F, state_names_abbs_df=get_states(return_which='both')){
v_ <- tolower(v)
# state_names_abbs_df <- get_states(return_which='both')
# # state_names <- c(state.name[order(nchar(state.name), state.name, decreasing=T)], 'District of Columbia', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'United States Virgin Islands', 'Virgin Islands', 'American Samoa')
# addl_states <- c("S Carolina", "N Carolina", "W Virginia", "N Hampshire", "S Dakota", "N Dakota", "N Mexico", "N Jersey", "N York")
## state_names <- c(state_names, addl_states)
## state_abbs <- c(state.abb, 'DC', 'PR', 'VI', 'AS')
if(any(!tolower(v) %in% tolower(c(state_names_abbs_df$state_names, state_names_abbs_df$state_abbs)))){v_ <- gsub('united states', 'us', v_)}
st1 <- statetoabb(v_, state_names_abbs_df=state_names_abbs_df) %>% abbtostate(., state_names_abbs_df=state_names_abbs_df)
st2 <- abbtostate(v_, state_names_abbs_df=state_names_abbs_df)
result <- if(!abb){ ifelse(is.na(st1), st2, st1)} else {statetoabb(ifelse(is.na(st1), st2, st1), state_names_abbs_df=state_names_abbs_df)}
# if(any(!(result %in% unlist(state_names_abbs_df) ) )){
#   state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands"), state_abbs=c("CA", "MP"), state_fips=c("06", "69"))
# }
return(result)
}
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
result
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
}
result
v <- c(v, "W. Virginia", "W Virginia", "WVirginia")
v
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
}
result
state_names_abbs_df2
dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth)", "\\1", state_names))
)
dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth)", "\\1", state_names))
) %>% distinct()
state_names_abbs_df2 <- dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", state_names))
) %>% distinct()
state_names_abbs_df2
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", state_names))
) %>% distinct()
strip_punct
strip_punct(result)
dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", state_names)),
) %>%
bind_rows(.,
mutate(state_names_abbs_df2, state_names=gsub(" ", "", state_names))
) %>%
distinct()
v
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
result
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", state_names)),
) %>%
bind_rows(.,
mutate(state_names_abbs_df2, state_names=gsub(" ", "", state_names))
) %>%
distinct()
result <- gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", strip_punct(result))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
}
}
result
state_names_abbs_df
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
distinct(state_names_abbs_df, state_abbs)
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
distinct(state_names_abbs_df, state_abbs, .keep_all=T)
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
distinct(state_names_abbs_df2, state_abbs, .keep_all=T)
state_names_abbs_df2
state_names_abbs_df
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
distinct(state_names_abbs_df, state_abbs, .keep_all=T)
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
distinct(state_names_abbs_df2, state_abbs, .keep_all=T)
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
state_names_abbs_df <- dplyr::distinct(state_names_abbs_df, state_abbs, .keep_all=T)
state_names_abbs_df=get_states(return_which='both')
dplyr::distinct(state_names_abbs_df, state_names, .keep_all=T)
state2abb_or_abb2state(result, abb=T, state_names_abbs_df=state_names_abbs_df2)
result <- state2abb_or_abb2state(result, abb=T, state_names_abbs_df=state_names_abbs_df2)
dplyr::distinct(state_names_abbs_df2, state_abbs)
result <- state2abb_or_abb2state(result, abb=T, state_names_abbs_df=state_names_abbs_df2)
state_fips_df <- dplyr::distinct(state_names_abbs_df2, state_abbs)
from <- state_fips_df$state_abbs
to <- state_fips_df$state_fips
result <- to[match(result, from)]
result
state_fips_df
state_fips_df <- dplyr::distinct(state_names_abbs_df2, state_abbs, .keep_all=T)
from <- state_fips_df$state_abbs
to <- state_fips_df$state_fips
result <- to[match(result, from)]
result
state_fips_df
result <- state2abb_or_abb2state(result, abb=T, state_names_abbs_df=state_names_abbs_df2)
result
state2abb_or_abb2state(result, abb=T, state_names_abbs_df=state_names_abbs_df2)
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' state2abb_or_abb2state(v, abb=F)
state2abb_or_abb2state <- function(v, abb=F, state_names_abbs_df=get_states(return_which='both')){
v_ <- tolower(v)
# state_names_abbs_df <- get_states(return_which='both')
# # state_names <- c(state.name[order(nchar(state.name), state.name, decreasing=T)], 'District of Columbia', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'United States Virgin Islands', 'Virgin Islands', 'American Samoa')
# addl_states <- c("S Carolina", "N Carolina", "W Virginia", "N Hampshire", "S Dakota", "N Dakota", "N Mexico", "N Jersey", "N York")
## state_names <- c(state_names, addl_states)
## state_abbs <- c(state.abb, 'DC', 'PR', 'VI', 'AS')
if(any(!tolower(v) %in% tolower(c(state_names_abbs_df$state_names, state_names_abbs_df$state_abbs)))){v_ <- gsub('united states', 'us', v_)}
st1 <- statetoabb(v_, state_names_abbs_df=state_names_abbs_df) %>% abbtostate(., state_names_abbs_df=state_names_abbs_df)
st2 <- abbtostate(v_, state_names_abbs_df=state_names_abbs_df)
result <- if(!abb){ ifelse(is.na(st1), st2, st1)} else {statetoabb(ifelse(is.na(st1), st2, st1), state_names_abbs_df=state_names_abbs_df)}
# if(any(!(result %in% unlist(state_names_abbs_df) ) )){
#   state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands"), state_abbs=c("CA", "MP"), state_fips=c("06", "69"))
# }
return(result)
}
#' Samantha Rhoads's function to...
#' @export
#' @examples
#' statetoabb(v)
statetoabb <- function (v, state_names_abbs_df=get_states(return_which='both')) {
# st=c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
#      "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
#      "District of Columbia",'Washington DC', "US Virgin Islands",'United States Virgin Islands','Virgin Islands', "Puerto Rico",'American Samoa', "Northern Mariana Islands", "Guam")
# ab=c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
#      "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
#      "DC", "DC", "VI", "VI", "VI", "PR", "AS", "AP", "GU")
state_names_abbs_df <- dplyr::distinct(state_names_abbs_df, state_names, .keep_all=T)
v_ <- strip_punct(tolower(v), replacewithspace=F)
from <- st <- tolower(state_names_abbs_df$state_names) %>% strip_punct(., replacewithspace=F)
to <- ab <- toupper(state_names_abbs_df$state_abbs)
result <- to[match(v_, from)]
ifelse(is.na(result), v, result)
}
#' Samantha Rhoads's function to...
#' @export
#' @examples
#' abbtostate(v)
abbtostate <- function (v, state_names_abbs_df=get_states(return_which='both')) {
v_ <- strip_punct(tolower(v), replacewithspace=F)
state_names_abbs_df <- dplyr::distinct(state_names_abbs_df, state_abbs, .keep_all=T)
to <- st <- state_names_abbs_df$state_names
from <- ab <- tolower(state_names_abbs_df$state_abbs) %>% strip_punct(., replacewithspace=F)
result <- to[match(v_, from)]
ifelse(is.na(result), v, result)
}
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' state2abb_or_abb2state(v, abb=F)
state2abb_or_abb2state <- function(v, abb=F, state_names_abbs_df=get_states(return_which='both')){
v_ <- tolower(v)
# state_names_abbs_df <- get_states(return_which='both')
# # state_names <- c(state.name[order(nchar(state.name), state.name, decreasing=T)], 'District of Columbia', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'United States Virgin Islands', 'Virgin Islands', 'American Samoa')
# addl_states <- c("S Carolina", "N Carolina", "W Virginia", "N Hampshire", "S Dakota", "N Dakota", "N Mexico", "N Jersey", "N York")
## state_names <- c(state_names, addl_states)
## state_abbs <- c(state.abb, 'DC', 'PR', 'VI', 'AS')
if(any(!tolower(v) %in% tolower(c(state_names_abbs_df$state_names, state_names_abbs_df$state_abbs)))){v_ <- gsub('united states', 'us', v_)}
st1 <- statetoabb(v_, state_names_abbs_df=state_names_abbs_df) %>% abbtostate(., state_names_abbs_df=state_names_abbs_df)
st2 <- abbtostate(v_, state_names_abbs_df=state_names_abbs_df)
result <- if(!abb){ ifelse(is.na(st1), st2, st1)} else {statetoabb(ifelse(is.na(st1), st2, st1), state_names_abbs_df=state_names_abbs_df)}
# if(any(!(result %in% unlist(state_names_abbs_df) ) )){
#   state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands"), state_abbs=c("CA", "MP"), state_fips=c("06", "69"))
# }
return(result)
}
#' Samantha Rhoads's function to extract states from a vector
#' @export
#' @examples
#' extract_state(v, keep_which=c('all', 'first', 'last')[1], return_input_if_no_match=T)
extract_state <- function(v, keep_which=c('all', 'first', 'last')[1], return_input_if_no_match=T){
v_ <- gsub('W\\. V', 'W V', v)    #{v <- c('City, West Virginia', 'Larami, WY', 'Oskaloosa, DC', 'Sunnyvale', 'Baby, W. Virginia', 'Sami, W Virginia', 'Cat, N Carolina', 'Albany, N York', 'Albany, N. York', 'Laramie, Wyoming')}
state_names_abbs_df <- get_states(return_which='both')
addl_states <- c('United States Virgin Islands', 'Virgin Islands', "S Carolina", "N Carolina", "W Virginia", "N Hampshire", "S Dakota", "N Dakota", "N Mexico", "N Jersey", "N York")
state_names <- c(state_names_abbs_df$state_names[order(nchar(state_names_abbs_df$state_names), state_names_abbs_df$state_names, decreasing=T)], addl_states)
# addl_states <- grep('West|East|South|North|New', state_names, value=T) %>% gsub('West', 'W', .) %>% gsub('East', 'E', .) %>% gsub('South', 'S', .) %>% gsub('North', 'N', .) %>% gsub('New', 'N', .) %>% edit()
state_names <- c(state_names, addl_states) %>% unique()
state_abbs <- state_names_abbs_df$state_abbs
v_ <- stringr::str_extract_all(tools::toTitleCase(v_), paste0("\\b(", paste_regex(state_names), ")\\b")  ) %>% sapply(., function(x) paste0(x, collapse="; "))
if(any(nchar(v_)==0)){
v_ <- sapply(1:length(v), function(i){ # {i=2}
vs <- v[i]; v_s <- v_[i]
if(nchar(v_s)==0){v_s <- stringr::str_extract_all(vs, paste0("\\b(", paste_regex(state_abbs), ")\\b")  ) %>% sapply(., function(x) paste0(x, collapse="; "))}
if(nchar(v_s)==0){v_s <- stringr::str_extract_all(vs, paste0(paste_regex(state_names))  ) %>% sapply(., function(x) paste0(x, collapse="; "))}
if(nchar(v_s)==0){v_s <- stringr::str_extract_all(vs, paste0("\\b(", paste_regex(tolower(state_abbs)), ")\\b")  ) %>% sapply(., function(x) paste0(x, collapse="; "))}
if(nchar(v_s)==0){v_s <- stringr::str_extract_all(gsub('\\.', '', vs), paste0("\\b(", paste_regex(c(state_abbs, state_names)), ")\\b")  ) %>% sapply(., function(x) paste0(x, collapse="; "))}
if(nchar(v_s)==0){v_s <- stringr::str_extract_all(vs, paste0(paste_regex(gsub(' ', '', state_names)))  ) %>% sapply(., function(x) paste0(x, collapse="; "))}
if(nchar(v_s)==0){v_s <- stringr::str_extract_all(vs, paste_regex(state_names)  ) %>% sapply(., function(x) paste0(x, collapse="; "))}
if(nchar(v_s)==0){v_s <- stringr::str_extract_all(tolower(vs), paste_regex(tolower(state_names))  ) %>% sapply(., function(x) paste0(x, collapse="; "))}
if(nchar(v_s)==0&return_input_if_no_match){v_s <- vs} else if(nchar(v_s)==0){v_s <- NA}
v_s
}) %>% as.character()
}
if(keep_which=='first'){
v_ <- gsub(';.*', '', v_) %>% trimws()
} else if(keep_which=='last'){
v_ <- gsub('.*;', '', v_) %>% trimws()
}
v_
}
state_names_abbs_df=get_states(return_which='both')
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
result
any(!(result %in% unlist(state_names_abbs_df) ) )
(any(!(result %in% unlist(state_names_abbs_df) ) ))
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", state_names)),
) %>%
bind_rows(.,
mutate(state_names_abbs_df2, state_names=gsub(" ", "", state_names))
) %>%
distinct()
result <- gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", strip_punct(result))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
}
}
result
result <- state2abb_or_abb2state(result, abb=T, state_names_abbs_df=state_names_abbs_df2)
result
state_fips_df <- dplyr::distinct(state_names_abbs_df2, state_abbs, .keep_all=T)
state_fips_df
from <- state_fips_df$state_abbs
to <- state_fips_df$state_fips
result <- to[match(result, from)]
result
#' Samantha Rhoads's function to recode states (even from state fips codes)
#' @export
#' @examples
#' recode_state(v, abb=T, to_fips=F)
recode_state <- function(v, abb=T, to_fips=F, state_names_abbs_df=get_states(return_which='both')){
if(all(is.numeric(v))|all(lookslike_number(v))){
v <- state_names_abbs_df$state_abbs[match(readr::parse_number(as.character(v)), readr::parse_number(as.character(state_names_abbs_df$state_fips)))]
}
result <- state2abb_or_abb2state(v, abb=abb, state_names_abbs_df=state_names_abbs_df)
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- state_names_abbs_df %>% tibble::add_row(state_names=c("Cali", "Mariana Islands", "Virgin Islands"), state_abbs=c("CA", "MP", "VI"), state_fips=c("06", "69", "78"))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
if(any(!(result %in% unlist(state_names_abbs_df) ) )){
state_names_abbs_df2 <- dplyr::bind_rows(state_names_abbs_df2,
mutate(state_names_abbs_df2, state_names=gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", state_names)),
) %>%
bind_rows(.,
mutate(state_names_abbs_df2, state_names=gsub(" ", "", state_names))
) %>%
distinct()
result <- gsub("(W|E|S|N)(est|ast|outh|orth(ern|))", "\\1", strip_punct(result))
result <- state2abb_or_abb2state(result, abb=abb, state_names_abbs_df=state_names_abbs_df2)
}
}
if(to_fips){
result <- state2abb_or_abb2state(result, abb=T, state_names_abbs_df=state_names_abbs_df2)
state_fips_df <- dplyr::distinct(state_names_abbs_df2, state_abbs, .keep_all=T)
from <- state_fips_df$state_abbs
to <- state_fips_df$state_fips
result <- to[match(result, from)]
}
return(result)
}
roxygen2::roxygenise(clean=T)
rm(list=ls())
roxygen2::roxygenise(clean=T)
system('git add -A && git commit -m "added/edited functions"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "added/edited functions"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
