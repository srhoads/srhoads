gsub("operatives.*", "operatives", .) %>%
gsub("laborers.*", "laborers and helpers", .)
if(component2){
v <- recode(tolower(v),
"1" = "1. Executive/Senior Level Officials and Managers", "1.0" = "1. Executive/Senior Level Officials and Managers",
"1.1" = "1. Executive/Senior Level Officials and Managers", "1.2" = "2. First/Mid-Level Officials and Managers", "2" = "3. Professionals", "3" = "4. Technicians", "4" = "5. Sales Workers", "5" = "6. Administrative Support Workers", "6" = "7. Craft Workers", "7" = "8. Operatives", "8" = "9. Laborers and Helpers", "9" = "10. Service Workers", "10" = "10. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers", "1.1 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "2. professionals" = "3. Professionals", "3. technicians" = "4. Technicians", "4. sales workers" = "5. Sales Workers", "5. administrative support workers" = "6. Administrative Support Workers", "6. craft workers" = "7. Craft Workers", "7. operatives" = "8. Operatives","8. laborers and helpers" = "9. Laborers and Helpers", "9. service workers" = "10. Service Workers", "10. service workers" = "10. Service Workers",
"executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers","first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "professionals" = "3. Professionals", "technicians" = "4. Technicians", "sales workers" = "5. Sales Workers", "administrative support workers" = "6. Administrative Support Workers", "craft workers" = "7. Craft Workers", "operatives" = "8. Operatives", "laborers and helpers" = "9. Laborers and Helpers", "service workers" = "10. Service Workers","not applicable" = "9999", "not reported" = "NA")
} else {
v <- recode(tolower(v),
"1" = "1.1 Executive/Senior Level Officials and Managers",
"1.0" = "1.1 Executive/Senior Level Officials and Managers",
"1.1" = "1.1 Executive/Senior Level Officials and Managers",
"1.2" = "1.2 First/Mid-Level Officials and Managers",
"2" = "2. Professionals",
"3" = "3. Technicians",
"4" = "4. Sales Workers",
"5" = "5. Administrative Support Workers",
"6" = "6. Craft Workers",
"7" = "7. Operatives",
"8" = "8. Laborers and Helpers",
"9" = "9. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.1 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "1.2 First/Mid-Level Officials and Managers",
"2. professionals" = "2. Professionals",
"3. technicians" = "3. Technicians",
"4. sales workers" = "4. Sales Workers",
"5. administrative support workers" = "5. Administrative Support Workers",
"6. craft workers" = "6. Craft Workers",
"7. operatives" = "7. Operatives",
"8. laborers and helpers" = "8. Laborers and Helpers",
"9. service workers" = "9. Service Workers",
"executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"first/mid-level officials and managers" = "1.2. First/Mid-Level Officials and Managers",
"professionals" = "2. Professionals",
"technicians" = "3. Technicians",
"sales workers" = "4. Sales Workers",
"administrative support workers" = "5. Administrative Support Workers",
"craft workers" = "6. Craft Workers",
"operatives" = "7. Operatives",
"laborers and helpers" = "8. Laborers and Helpers",
"service workers" = "9. Service Workers")
}
v <- ifelse(grepl('^1.*1.*000.*1', v),  "1.1 Executive/Senior Level Officials and Managers", v)
v <- na_if(v, "NA") # tools::toTitleCase(v) %>% as.factor()
return(v)
}
recode_jobgroup <- function(v, component2=F, verbose=F){
if(verbose){cat("\n", "recode_jobgroup()", "\n")}
v <- recode_jobgroup_nums(v)
v <- gsub("1e\\+16", "1", v) %>% tolower() %>%
gsub("exe snr", "executive/senior", .) %>%
gsub("operatives.*", "operatives", .) %>%
gsub("laborers.*", "laborers and helpers", .)
if(component2){
v <- recode(tolower(v),
"1" = "1. Executive/Senior Level Officials and Managers", "1.0" = "1. Executive/Senior Level Officials and Managers",
"1.1" = "1. Executive/Senior Level Officials and Managers", "1.2" = "2. First/Mid-Level Officials and Managers", "2" = "3. Professionals", "3" = "4. Technicians", "4" = "5. Sales Workers", "5" = "6. Administrative Support Workers", "6" = "7. Craft Workers", "7" = "8. Operatives", "8" = "9. Laborers and Helpers", "9" = "10. Service Workers", "10" = "10. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers", "1.1 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "2. professionals" = "3. Professionals", "3. technicians" = "4. Technicians", "4. sales workers" = "5. Sales Workers", "5. administrative support workers" = "6. Administrative Support Workers", "6. craft workers" = "7. Craft Workers", "7. operatives" = "8. Operatives","8. laborers and helpers" = "9. Laborers and Helpers", "9. service workers" = "10. Service Workers", "10. service workers" = "10. Service Workers",
"executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers","first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "professionals" = "3. Professionals", "technicians" = "4. Technicians", "sales workers" = "5. Sales Workers", "administrative support workers" = "6. Administrative Support Workers", "craft workers" = "7. Craft Workers", "operatives" = "8. Operatives", "laborers and helpers" = "9. Laborers and Helpers", "service workers" = "10. Service Workers","not applicable" = "9999", "not reported" = "NA")
} else {
v <- recode(tolower(v),
"1" = "1.1 Executive/Senior Level Officials and Managers",
"1.0" = "1.1 Executive/Senior Level Officials and Managers",
"1.1" = "1.1 Executive/Senior Level Officials and Managers",
"1.2" = "1.2 First/Mid-Level Officials and Managers",
"2" = "2. Professionals",
"3" = "3. Technicians",
"4" = "4. Sales Workers",
"5" = "5. Administrative Support Workers",
"6" = "6. Craft Workers",
"7" = "7. Operatives",
"8" = "8. Laborers and Helpers",
"9" = "9. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.1 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "1.2 First/Mid-Level Officials and Managers",
"2. professionals" = "2. Professionals",
"3. technicians" = "3. Technicians",
"4. sales workers" = "4. Sales Workers",
"5. administrative support workers" = "5. Administrative Support Workers",
"6. craft workers" = "6. Craft Workers",
"7. operatives" = "7. Operatives",
"8. laborers and helpers" = "8. Laborers and Helpers",
"9. service workers" = "9. Service Workers",
"executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"first/mid-level officials and managers" = "1.2. First/Mid-Level Officials and Managers",
"professionals" = "2. Professionals",
"technicians" = "3. Technicians",
"sales workers" = "4. Sales Workers",
"administrative support workers" = "5. Administrative Support Workers",
"craft workers" = "6. Craft Workers",
"operatives" = "7. Operatives",
"laborers and helpers" = "8. Laborers and Helpers",
"service workers" = "9. Service Workers")
}
v <- ifelse(grepl('^1.*1.*000.*1', v),  "1.1 Executive/Senior Level Officials and Managers", v)
v <- na_if(v, "NA") # tools::toTitleCase(v) %>% as.factor()
return(v)
}
dbDriver
RPostgres::dbDriver
RPostgres::dbDriver("PostgreSQL")
RPostgres::dbDriver("PostgreSQL") %>% class()
DBI::dbListConnections
(DBI::dbDriver("PostgreSQL")
)
drivername='PostgreSQL'
(cons <- DBI::dbListConnections(DBI::dbDriver(drivername))); # RPostgres::dbDisconnect(cons[[3]])
fun
as_numeric <- function(v, suppresswarnings=T){
if(suppresswarnings){
v_ <- suppressWarnings(readr::parse_number(as.character(v)))
} else {
v_ <- readr::parse_number(as.character(v))
}
return(v_)
}
dbSendQuery
postgresqlCloseResult
RPostgreSQL::postgresqlCloseResult
library(RPostgres)
library(RPostgreSQL)
install.packages('PostgreSQL')
install.packages('PostgresSQL')
install.packages('postgreSQL')
DBI::postgresqlCloseResult
#' Samantha Rhoads's function to change one record of one variable in a SQL database (jlcentric)
#' @export
#' @examples
#' edit_client_name(con, table='clientmanagement_client', CLIENT_NAME_TO_RENAME = "GROSSOLDNAME", CLIENT_NAME_NEW = "PLEASEWORKCOOLNAME")
edit_client_name <- function(con, table='clientmanagement_client', CLIENT_NAME_TO_RENAME = "GROSSOLDNAME", CLIENT_NAME_NEW = "PLEASEWORKCOOLNAME"){
pkg('RPostgreSQL')
UPDATE_ROW_QUERY <- paste0("update ", table, " set client_name='", CLIENT_NAME_NEW, "' WHERE client_name='", CLIENT_NAME_TO_RENAME, "'")
update <- DBI::dbSendQuery(con, UPDATE_ROW_QUERY)
postgresqlCloseResult(update)
}
recode
`%>%`
`%>%` <- magrittr::`%>%`
`%>%`
roxygen2::roxygenise(clean=T)
rm(list=ls())
.rs.restartR()
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R fxns added from censuscodeassign; python fxns cleanup+added from diversity-planning-project; other cleanup R/Python"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
sample_n
srhoads::geocode_by_cell('1156 Susan Way Sunnyvale, CA')
#' Samantha Rhoads's function to...
#'
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' geocode_by_cell()
geocode_by_cell <- function(v, replacewith=NULL) lapply(v, function(s){
# srhoads::geocode_by_cell('1156 Susan Way Sunnyvale, CA')
# install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
if(is.null(replacewith)) replacewith <- s
# tryCatch(geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_str_strip_NAs() %>% gsub(",", ", ", .) %>% trimws_(), error=function(e) s)
tryCatch(ggmap::geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_unique_sep(., ", ") %>% na_if_(), error=function(e) {cat('\n#geocode_by_cell() ERROR:\n'); print(e); replacewith})
}) %>% unlist()
geocode_by_cell('1156 Susan Way Sunnyvale, CA')
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
rm(list=ls())
.rs.restartR()
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
#' Samantha Rhoads's function to...
#'
#' Srhoads wrote this to allow you to...
#' @export
#' @examples {geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')}
#' geocode_by_cell()
geocode_by_cell <- function(v, replacewith=NULL) lapply(v, function(s){
# install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
if(is.null(replacewith)) replacewith <- s
# tryCatch(geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_str_strip_NAs() %>% gsub(",", ", ", .) %>% trimws_(), error=function(e) s)
tryCatch(ggmap::geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_unique_sep(., ", ") %>% na_if_(), error=function(e) {cat('\n#geocode_by_cell() ERROR:\n'); print(e); replacewith})
}) %>% unlist()
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
library(srhoads)
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
packageVersion('ggmap')
#' Samantha Rhoads's function to...
#'
#' Srhoads wrote this to allow you to...
#' @export
#' @examples {geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')}
#' geocode_by_cell()
geocode_by_cell <- function(v, replacewith=NULL) lapply(v, function(s){
## ggmap VERSION NEEDED ():
# {install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')}
if(is.null(replacewith)) replacewith <- s
# tryCatch(geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_str_strip_NAs() %>% gsub(",", ", ", .) %>% trimws_(), error=function(e) s)
tryCatch(ggmap::geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_unique_sep(., ", ") %>% na_if_(), error=function(e) {cat('\n#geocode_by_cell() ERROR:\n'); print(e); replacewith})
}) %>% unlist()
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
install.packages("https://cran.r-project.org/src/contrib/Archive/ggmap/ggmap_2.6.1.tar.gz", type="source", repos=NULL); .rs.restartR(); library(ggmap)
install.packages("https://cran.r-project.org/src/contrib/Archive/ggmap/ggmap_2.6.1.tar.gz", type="source", repos=NULL); .rs.restartR(); library(ggmap)
library(srhoads)
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
geocode_by_cell('Palo Alto')
geocode_by_cell('Santa Clara, CA')
geocode_by_cell('Stanford')
datatable
srhoads::getMostRecentFiles
#' Samantha Rhoads's function to take an Excel 5-digit date (or many digit datetime like '43467 381058125') + turn it into a date format
#' @export
#' @examples
#' excelToDateIf5DigitStrAndManyDigitTime(v)
excelToDateIf5DigitStrAndManyDigitTime <- function(v){ # ie: "43467 381058125"...or... "43467 402791006942"
if(
all(
unique(nchar(na.omit(
v %>% word(1) %>% gsub("[^[:digit:]]", "", .)
)))==5
) & all(
unique(nchar(na.omit(
v %>% word(2) %>% gsub("[[:digit:]]", "", .)
)))==0
)
){
v <- word(v, 1)
v <- lubridate::date(janitor::excel_numeric_to_date(as.numeric(v)))
} else {
if(any(grepl("\\.", v))&!is.Date.class(v)){
v <- gsub("\\.", " ", v)
v <- word(v, 1)
v <- tryCatch(lubridate::date(janitor::excel_numeric_to_date(as.numeric(v))), error=function(e) v)
}
}
v
}
excelToDateIf5DigitStrAndManyDigitTime('39328473')
excelToDateIf5DigitStrAndManyDigitTime('39328473333')
excelToDateIf5DigitStrAndManyDigitTime('39334')
excelToDateIf5DigitStrAndManyDigitTime('43467 381058125')
qdapRegex::rm_
zipcode5
zipcode5('329843902jdj239eu')
zipcode5('329843')
zipcode5('32984')
zipcode5('32984-eijf')
zipcode5('32984-1234')
zipcode5('32984-12345')
v <- c('924832sjkhf',' 20439-22912', '93488-9293', '23984_93284', '39842-3949 32432', '328rjd2 nh22 22242 ')
gsub('"(?<!\\d)\\d{5}(?!\\d)"', "", v)
gsub("(?<!\\d)\\d{5}(?!\\d)", "", v)
pattern="(?<!\\d)\\d{5}(?!\\d)"
gsub(pattern, "", v)
pattern="(?<!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(pattern, v)
pattern="(?<!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(pattern, v)
pattern="(?!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(pattern, v)
gsub("(?<!\\d)\\d{5}(?!\\d)", "", v)
gsub("(?!\\d)\\d{5}(?!\\d)", "", v)
gsub("(?\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?\\d)", "", v)
gsub("(\\d)\\d{5}(\\d)", "", v)
gsub("(?<!\\d)\\d{5}(?\\d)", "", v)
gsub("(?<!\\d)\\d{5}(!\\d)", "", v)
gsub("(<!\\d)\\d{5}(?!\\d)", "", v)
gsub("(<\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?\\d)", "", v)
gsub("(\\d)\\d{5}(!\\d)", "", v)
gsub("(<!\\d)\\d{5}(?!\\d)", "", v)
gsub("(<!\\d)\\d{5}(!\\d)", "", v)
gsub("(<!\\d)\\d{5}(!?\\d)", "", v)
gsub("(<?!\\d)\\d{5}(!?\\d)", "", v)
gsub("(?<!\\d)\\d{5}(!?\\d)", "", v)
gsub("?(<!\\d)\\d{5}(!?\\d)", "", v)
pattern="(<!\\d)\\d{5}(!\\d)"
stringr::str_extract_all(pattern, v)
pattern="\\d{5}(!\\d)"
stringr::str_extract_all(pattern, v)
pattern="\\d{5}(\\d)"
stringr::str_extract_all(pattern, v)
pattern="\\d{5}"
stringr::str_extract_all(pattern, v)
stringr::str_extract_all
stringr::str_extract_all(v, pattern)
pattern="(?<!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(v, pattern)
stringr::str_extract_all(v, pattern="(?<!\\d)\\d{5}(?!\\d)")
grDevices::axisTicks
.rs.restartR()
rm(list=ls())
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R/Python fxns cleanup"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
sprintf
dbDisconnect
DBI::dbDisconnec
DBI::dbDisconnect
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R/Python fxns cleanup; rm_ds_store() fxn written"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R/Python fxns cleanup; rm_ds_store() fxn written"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
#' Samantha Rhoads's function to tell the shell to open a file in whatever its default program is
#' @export
#' @examples
#' system_open(paths)
system_open <- open_system <- function(paths){
lapply(paths, function(s){
cmdstr <- paste0('open "', s, '"')
system(cmdstr)
})
return(paths)
}
bind_rows_
bind_rows
dplyr::bind_rows
x <- list(srhoads::dfsampler(), srhoads::dfsampler())
is.data.frame(x)
all(lapply(x, is.data.frame))
(lapply(x, is.data.frame)
)
(sapply(x, is.data.frame))
all(sapply(..., is.data.frame))
bind_rows_ <- function(..., .id = NULL){
if(is.data.frame(...)|all(sapply(..., is.data.frame))){
return(dplyr::bind_rows(..., .id = NULL))
} else {
return(...)
}
}
bind_rows_(x)
bind_rows_ <- function(..., .id = NULL){
if(is.data.frame(...)|all(sapply(..., is.data.frame))){
return(dplyr::bind_rows(..., .id = NULL))
} else {
return(...)
}
}
#' Samantha Rhoads's function to bind rows of object if they're dataframes
#' @export
#' @examples
#' bind_rows_(..., .id = NULL)
bind_rows_ <- function(..., .id = NULL){
if(is.data.frame(...)|all(sapply(..., is.data.frame))){
return(dplyr::bind_rows(..., .id = NULL))
} else {
return(...)
}
}
#' Samantha Rhoads's function to bind rows going multiple depths
#' @export
#' @examples
#' bind_rows2(l)
bind_rows2 <- function(l){
lapply(lapply2(l, bind_rows_), bind_rows_)
}
sep='///'
v <- 'hdkjsfhwjkfhd///sami///NA/sami/cats/NA'
paste0(sep, 'NA')
paste0(sep, 'NA($|', sep, ')')
paste0('(^|', sep, ')', 'NA($|', sep, ')')
# trimws_(gsub('///NA|NA///|^///|///$|^///|///$|^\\///|\\///$', '', v, perl=T)) %>% gsub(' ///|/// |//////', '///', ., perl=T) %>%
remove_str <- paste0('(^|', sep, ')', 'NA($|', sep, ')')
gsub(remove_str, sep, v, perl=T)
v <- 'hdkjsfhwjkfhd///sami///NA/sami/cats///NA'
v <- 'hdkjsfhwjkfhd///sami///NA///sami///cats///NA'
gsub(remove_str, sep, v, perl=T)
paste0('^', sep, '|', sep, '$')
paste0('^', sep, '|', sep, '$', '|', sep, sep)
# trimws_(gsub('///NA|NA///|^///|///$|^///|///$|^\\///|\\///$', '', v, perl=T)) %>% gsub(' ///|/// |//////', '///', ., perl=T) %>%
remove_str <- paste0('(^|', sep, ')', 'NA($|', sep, ')')
v_ <- gsub(remove_str, sep, v, perl=T)
trim_sep_str <- paste0('^', sep, '|', sep, '$', '|', sep, sep)
v_ <- gsub(trim_sep_str, '', v_, perl=T)
remove_duplicate_punct
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' remove_duplicate_punct()
remove_duplicate_punct <- function(v, nrepeat=6){
sum <- 0
repeat{
sum <- sum + 1
v <- remove_duplicate_punct_separated_by_space_or_not(v)
if(sum==nrepeat) break
}
v
}
devtools::document() # {roxygen2::roxygenise(clean=T)}
roxygen2::roxygenise(clean=T)
system('git add -A && git commit -m "R/Python fxns cleanup; rm_ds_store() fxn written"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
1
#' This function allows you to trim whitespace but also remove double spaces
#' @export
#' @examples
#' trimws_(v, which='both', doublespace=T)
trimws_ <- function(v, which='both', doublespace=T){
if(which=="both"){v <- gsub("([[:space:]]| )$|^([[:space:]]| )", "", v)}
if(which=="left"){v <- gsub("^([[:space:]]| ){1,100}", "", v)}
if(which=="right"){v <- gsub("([[:space:]]| )${1,100}", "", v)}
if(doublespace) {v <- gsub('(   |  |[[:space:]][[:space:]]){1,100}', ' ', v)}
v <- trimws(v, which=which)
v
}
#' This function allows you to trim whitespace but also remove double spaces
#' @export
#' @examples
#' trimws_(v, which='both', doublespace=T)
trimws_ <- function(v, which='both', doublespace=T){
if(which=="both"){v <- gsub("([[:space:]]| )$|^([[:space:]]| )", "", v)}
if(which=="left"){v <- gsub("^([[:space:]]| ){1,100}", "", v)}
if(which=="right"){v <- gsub("([[:space:]]| )${1,100}", "", v)}
if(doublespace) {v <- gsub('(   |  |[[:space:]][[:space:]]){1,100}', ' ', v)}
v <- trimws(v, which=which)
v
}
r.R.home()
R.home()
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "added/edited functions"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% filter(OCCP %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist())
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% filter(occp %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist())
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx')
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% filter(OCCP %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist())
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% janitor::clean_names() %>% filter(occp %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist())
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% janitor::clean_names()->wtf
wtf$occp
library(tidyverse)
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% janitor::clean_names() %>% filter(occp %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist())
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% janitor::clean_names() %>% dplyr::filter(occp %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist())
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% dplyr::filter(OCCP %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist())
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% dplyr::filter(OCCP %in% c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965'))
c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist()
c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist() %>% edit()
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% dplyr::filter(!OCCP %in% c("5710", "5720", "5730", "5740", "2100", "0020", "0150", "0110",
"0360", "0136", "0120", "0010", "7905", "8990", "1551", "1555",
"9620", "7340", "5940", "8800", "4220", "5240", "9645", "3300",
"5120", "5600", "5150", "5360", "1050", "0705", "0750", "1610",
"0700", "1430", "0650", "0800", "0520", "1021", "1022", "1400",
"7000", "1006", "1720", "0845", "0960", "4850", "4930", "7700",
"0735", "2840", "1460", "1410", "0140", "0137", "0160", "0300",
"1105", "0565", "0051", "0052", "1935", "1970", "3330", "2631",
"2632", "2633", "2634", "2635", "2636", "2640", "1005", "0060",
"1106", "5400", "0725", "0135", "0101", "0102", "7720", "5100",
"8140", "7750", "0820", "0830", "5850", "9130", "2145", "0630",
"1065", "2861", "2865", "0640", "3421", "3422", "3423", "3424",
"3430", "3545", "5140", "3050", "1007", "5630", "9050", "3255",
"7140", "0810", "2825", "9030", "0220", "0410", "4965")
)
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% dplyr::filter(!OCCP %in% c("5710", "5720", "5730", "5740", "2100", "0020", "0150", "0110",
"0360", "0136", "0120", "0010", "7905", "8990", "1551", "1555",
"9620", "7340", "5940", "8800", "4220", "5240", "9645", "3300",
"5120", "5600", "5150", "5360", "1050", "0705", "0750", "1610",
"0700", "1430", "0650", "0800", "0520", "1021", "1022", "1400",
"7000", "1006", "1720", "0845", "0960", "4850", "4930", "7700",
"0735", "2840", "1460", "1410", "0140", "0137", "0160", "0300",
"1105", "0565", "0051", "0052", "1935", "1970", "3330", "2631",
"2632", "2633", "2634", "2635", "2636", "2640", "1005", "0060",
"1106", "5400", "0725", "0135", "0101", "0102", "7720", "5100",
"8140", "7750", "0820", "0830", "5850", "9130", "2145", "0630",
"1065", "2861", "2865", "0640", "3421", "3422", "3423", "3424",
"3430", "3545", "5140", "3050", "1007", "5630", "9050", "3255",
"7140", "0810", "2825", "9030", "0220", "0410", "4965")
) %>% writexl_open()
readxl::read_excel('/Users/rhoadss/Downloads/JGA_OLD.xlsx') %>% dplyr::filter(OCCP %in% c("5710", "5720", "5730", "5740", "2100", "0020", "0150", "0110",
"0360", "0136", "0120", "0010", "7905", "8990", "1551", "1555",
"9620", "7340", "5940", "8800", "4220", "5240", "9645", "3300",
"5120", "5600", "5150", "5360", "1050", "0705", "0750", "1610",
"0700", "1430", "0650", "0800", "0520", "1021", "1022", "1400",
"7000", "1006", "1720", "0845", "0960", "4850", "4930", "7700",
"0735", "2840", "1460", "1410", "0140", "0137", "0160", "0300",
"1105", "0565", "0051", "0052", "1935", "1970", "3330", "2631",
"2632", "2633", "2634", "2635", "2636", "2640", "1005", "0060",
"1106", "5400", "0725", "0135", "0101", "0102", "7720", "5100",
"8140", "7750", "0820", "0830", "5850", "9130", "2145", "0630",
"1065", "2861", "2865", "0640", "3421", "3422", "3423", "3424",
"3430", "3545", "5140", "3050", "1007", "5630", "9050", "3255",
"7140", "0810", "2825", "9030", "0220", "0410", "4965")|grepl(',', OCCP)
) %>% writexl_open()
sort(c("5710", "5720", "5730", "5740", "2100", "0020", "0150", "0110",
+                                                                                            "0360", "0136", "0120", "0010", "7905", "8990", "1551", "1555",
+                                                                                            "9620", "7340", "5940", "8800", "4220", "5240", "9645", "3300",
+                                                                                            "5120", "5600", "5150", "5360", "1050", "0705", "0750", "1610",
+                                                                                            "0700", "1430", "0650", "0800", "0520", "1021", "1022", "1400",
+                                                                                            "7000", "1006", "1720", "0845", "0960", "4850", "4930", "7700",
+                                                                                            "0735", "2840", "1460", "1410", "0140", "0137", "0160", "0300",
+                                                                                            "1105", "0565", "0051", "0052", "1935", "1970", "3330", "2631",
+                                                                                            "2632", "2633", "2634", "2635", "2636", "2640", "1005", "0060",
+                                                                                            "1106", "5400", "0725", "0135", "0101", "0102", "7720", "5100",
+                                                                                            "8140", "7750", "0820", "0830", "5850", "9130", "2145", "0630",
+                                                                                            "1065", "2861", "2865", "0640", "3421", "3422", "3423", "3424",
+                                                                                            "3430", "3545", "5140", "3050", "1007", "5630", "9050", "3255",
+                                                                                            "7140", "0810", "2825", "9030", "0220", "0410", "4965"))
c('5710, 5720, 5730, 5740, 2100, 0020, 0150, 0110, 0360, 0136, 0120, 0010, 7905, 8990, 1551, 1555, 9620, 7340, 5940, 8800, 4220, 5240, 9645, 3300, 5120, 5600, 5150, 5360, 1050, 0705, 0750, 1610, 0700, 1430, 0650, 0800, 0520, 1021, 1022, 1400, 7000, 1006, 1720, 0845, 0960, 4850, 4930, 7700, 0735, 2840, 1460, 1410, 0140, 0137, 0160, 0300, 1105, 0565, 0051, 0052, 1935, 1970, 3330, 2631, 2632, 2633, 2634, 2635, 2636, 2640, 1005, 0060, 1106, 5400, 0725, 0135, 0101, 0102, 7720, 5100, 8140, 7750, 0820, 0830, 5850, 9130, 2145, 0630, 1065, 2861, 2865, 0640, 3421, 3422, 3423, 3424, 3430, 3545, 5140, 3050, 1007, 5630, 9050, 3255, 7140, 0810, 2825, 9030, 0220, 0410, 4965') %>% strsplit(., ', ') %>% unlist() %>% sort() %>% edit()
