v1
}
#' Samantha Rhoads's function to recode gender more quickly than prior versions!!
#' @export
#' @examples
#' recode_gender(v)
recode_gender <- function(v){
v0 <- gsub("[[:space:]]| ", "", tolower(v)) %>% gsub("[[:punct:]]|[[:space:]]|nothispanic(orlatino).*|no(n|t)white.*", "", .)
v1 <- recode(v0, "male"="1", "female"="2", "nonbinary"="3", "unknown"="NA")
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("\\bmale", "female|fmale", "nonbinary|other", "none|donotwishto|unknown|undefined|notprovid|decline|no.*(avail|applic)|\\bna\\b|nothin")
v1 <- #ifelse(grepl(gendertext[7], v1)&!grepl(paste0(setdiff(gendertext, gendertext[7]), collapse="|"), v1), "7",
# ifelse(grepl(gendertext[6], v1)&!grepl(paste0(setdiff(gendertext, gendertext[6]), collapse="|"), v1), "6",
# ifelse(grepl(gendertext[5], v1)&!grepl(paste0(setdiff(gendertext, gendertext[5]), collapse="|"), v1), "5",
# ifelse(grepl(gendertext[4], v1)&!grepl(paste0(setdiff(gendertext, gendertext[4]), collapse="|"), v1), "4",
ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
na_if_(v1))))#))))
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("\\b(m|mal|man|he)|him|dude|mascul|guy|bro|his|ftm|femaletomale|one|boy|01", "fem|f|woman|girl|lady|femal|she|her|gal|wman|weiblich|mtf|maletofemale|frau|two|wmn|02", "non.*bin|three", "unk")
v1 <- #ifelse(grepl(gendertext[7], v1)&!grepl(paste0(setdiff(gendertext, gendertext[7]), collapse="|"), v1), "7",
#                ifelse(grepl(gendertext[6], v1)&!grepl(paste0(setdiff(gendertext, gendertext[6]), collapse="|"), v1), "6",
#                       ifelse(grepl(gendertext[5], v1)&!grepl(paste0(setdiff(gendertext, gendertext[5]), collapse="|"), v1), "5",
#                              ifelse(grepl(gendertext[4], v1)&!grepl(paste0(setdiff(gendertext, gendertext[4]), collapse="|"), v1), "4",
ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
v1)))#))))
#
#
if(any(grepl("[[:alpha:]]", v1))){
v1 <- recode(v1, "m"="1", "f"="2", "n"="3",
"her"="2", "g"="2", "his"="1")
#
#     if(any(grepl("[[:alpha:]]", v1))){
#       v1 <- ifelse(grepl('pac.*(isl|haw|nat)|nhopi|nat.*haw|haw.*pac|hawai|philip|polynes|samoa|pacific|tonga|hawpi|aorpi|micrones|fiji|maori|vanuat|tuval|palau|pacif|nauru|fil(l|)ipin|islander|malay|melanes|nhorpi', v1), '6',
#                    ifelse(grepl('(amer|alask).*(ind|nat)|(nat|ind).*(alask|amer)|(nat|am).*ind|nat.*am|ind.*nat|indigen|alaska|aioan', v1), '5',
#                           ifelse(grepl('africa|black|westindi|jamaica|blk|somali|morocc|egypt|nigeria', v1), '2',
#                                  ifelse(grepl('^((f|m|e|d|s|)hisp|latin|hislat|spanis|hipanic|lathis)|costaric|venezu|southam|salvador|mexic|ecua(d|t)or|puertoric|portugs|nicarag|bolivi|peruvi|hispanic|latin|chican|brazil|argentin', v1), '3', v1)
#                           )))
#     }
}
}
}
v1
}
#' Samantha Rhoads's function to recode gender more quickly than prior versions!!
#' @export
#' @examples
#' recode_gender(v)
recode_gender <- function(v){
v0 <- gsub("[[:space:]]| ", "", tolower(v)) %>% gsub("[[:punct:]]|[[:space:]]|nothispanic(orlatino).*|no(n|t)white.*", "", .)
v1 <- recode(v0, "male"="1", "female"="2", "nonbinary"="3", "unknown"="NA")
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("\\bmale", "female|fmale", "nonbinary|other", "none|donotwishto|unknown|undefined|notprovid|decline|no.*(avail|applic)|\\bna\\b|nothin")
v1 <- #ifelse(grepl(gendertext[7], v1)&!grepl(paste0(setdiff(gendertext, gendertext[7]), collapse="|"), v1), "7",
# ifelse(grepl(gendertext[6], v1)&!grepl(paste0(setdiff(gendertext, gendertext[6]), collapse="|"), v1), "6",
# ifelse(grepl(gendertext[5], v1)&!grepl(paste0(setdiff(gendertext, gendertext[5]), collapse="|"), v1), "5",
# ifelse(grepl(gendertext[4], v1)&!grepl(paste0(setdiff(gendertext, gendertext[4]), collapse="|"), v1), "4",
ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
na_if_(v1))))#))))
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("\\b(m|mal|man|he|amle)|him|dude|mascul|guy|bro|his|ftm|femaletomale|one|boy|01", "fem|f|woman|girl|lady|femal|she|her|gal|wman|weiblich|mtf|maletofemale|frau|two|wmn|02", "non.*bin|three|3|03", "unk")
v1 <- #ifelse(grepl(gendertext[7], v1)&!grepl(paste0(setdiff(gendertext, gendertext[7]), collapse="|"), v1), "7",
#                ifelse(grepl(gendertext[6], v1)&!grepl(paste0(setdiff(gendertext, gendertext[6]), collapse="|"), v1), "6",
#                       ifelse(grepl(gendertext[5], v1)&!grepl(paste0(setdiff(gendertext, gendertext[5]), collapse="|"), v1), "5",
#                              ifelse(grepl(gendertext[4], v1)&!grepl(paste0(setdiff(gendertext, gendertext[4]), collapse="|"), v1), "4",
ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
v1)))#))))
#
#
if(any(grepl("[[:alpha:]]", v1))){
v1 <- recode(v1, "m"="1", "f"="2", "n"="3", "her"="2", "g"="2", "his"="1")
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("man|mal", "fe", "3", "unk")
v1 <- ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
v1)))#))))
}
#     if(any(grepl("[[:alpha:]]", v1))){
#       v1 <- ifelse(grepl('pac.*(isl|haw|nat)|nhopi|nat.*haw|haw.*pac|hawai|philip|polynes|samoa|pacific|tonga|hawpi|aorpi|micrones|fiji|maori|vanuat|tuval|palau|pacif|nauru|fil(l|)ipin|islander|malay|melanes|nhorpi', v1), '6',
#                    ifelse(grepl('(amer|alask).*(ind|nat)|(nat|ind).*(alask|amer)|(nat|am).*ind|nat.*am|ind.*nat|indigen|alaska|aioan', v1), '5',
#                           ifelse(grepl('africa|black|westindi|jamaica|blk|somali|morocc|egypt|nigeria', v1), '2',
#                                  ifelse(grepl('^((f|m|e|d|s|)hisp|latin|hislat|spanis|hipanic|lathis)|costaric|venezu|southam|salvador|mexic|ecua(d|t)or|puertoric|portugs|nicarag|bolivi|peruvi|hispanic|latin|chican|brazil|argentin', v1), '3', v1)
#                           )))
#     }
}
}
}
v1
}
v0 <- gsub("[[:space:]]| ", "", tolower(v)) %>% gsub("[[:punct:]]|[[:space:]]|nothispanic(orlatino).*|no(n|t)white.*", "", .)
v1 <- recode(v0, "male"="1", "female"="2", "nonbinary"="3", "unknown"="NA")
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("\\bmale", "female|fmale", "nonbinary|other", "none|donotwishto|unknown|undefined|notprovid|decline|no.*(avail|applic)|\\bna\\b|nothin")
v1 <- #ifelse(grepl(gendertext[7], v1)&!grepl(paste0(setdiff(gendertext, gendertext[7]), collapse="|"), v1), "7",
# ifelse(grepl(gendertext[6], v1)&!grepl(paste0(setdiff(gendertext, gendertext[6]), collapse="|"), v1), "6",
# ifelse(grepl(gendertext[5], v1)&!grepl(paste0(setdiff(gendertext, gendertext[5]), collapse="|"), v1), "5",
# ifelse(grepl(gendertext[4], v1)&!grepl(paste0(setdiff(gendertext, gendertext[4]), collapse="|"), v1), "4",
ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
na_if_(v1))))#))))
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("\\b(m|mal|man|he|amle)|him|dude|mascul|guy|bro|his|ftm|femaletomale|one|boy|01", "fem|f|woman|girl|lady|femal|she|her|gal|wman|weiblich|mtf|maletofemale|frau|two|wmn|02", "non.*bin|three|3|03", "unk")
v1 <- #ifelse(grepl(gendertext[7], v1)&!grepl(paste0(setdiff(gendertext, gendertext[7]), collapse="|"), v1), "7",
#                ifelse(grepl(gendertext[6], v1)&!grepl(paste0(setdiff(gendertext, gendertext[6]), collapse="|"), v1), "6",
#                       ifelse(grepl(gendertext[5], v1)&!grepl(paste0(setdiff(gendertext, gendertext[5]), collapse="|"), v1), "5",
#                              ifelse(grepl(gendertext[4], v1)&!grepl(paste0(setdiff(gendertext, gendertext[4]), collapse="|"), v1), "4",
ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
v1)))#))))
#
#
if(any(grepl("[[:alpha:]]", v1))){
v1 <- recode(v1, "m"="1", "f"="2", "n"="3", "her"="2", "g"="2", "his"="1")
if(any(grepl("[[:alpha:]]", v1))){
gendertext <- c("man|mal", "fe", "3", "unk")
v1 <- ifelse(grepl(gendertext[3], v1)&!grepl(paste0(setdiff(gendertext, gendertext[3]), collapse="|"), v1), "3",
ifelse(grepl(gendertext[2], v1)&!grepl(paste0(setdiff(gendertext, gendertext[2]), collapse="|"), v1), "2",
ifelse(grepl(gendertext[1], v1)&!grepl(paste0(setdiff(gendertext, gendertext[1]), collapse="|"), v1), "1",
v1)))#))))
}
#     if(any(grepl("[[:alpha:]]", v1))){
#       v1 <- ifelse(grepl('pac.*(isl|haw|nat)|nhopi|nat.*haw|haw.*pac|hawai|philip|polynes|samoa|pacific|tonga|hawpi|aorpi|micrones|fiji|maori|vanuat|tuval|palau|pacif|nauru|fil(l|)ipin|islander|malay|melanes|nhorpi', v1), '6',
#                    ifelse(grepl('(amer|alask).*(ind|nat)|(nat|ind).*(alask|amer)|(nat|am).*ind|nat.*am|ind.*nat|indigen|alaska|aioan', v1), '5',
#                           ifelse(grepl('africa|black|westindi|jamaica|blk|somali|morocc|egypt|nigeria', v1), '2',
#                                  ifelse(grepl('^((f|m|e|d|s|)hisp|latin|hislat|spanis|hipanic|lathis)|costaric|venezu|southam|salvador|mexic|ecua(d|t)or|puertoric|portugs|nicarag|bolivi|peruvi|hispanic|latin|chican|brazil|argentin', v1), '3', v1)
#                           )))
#     }
}
}
}
v1
system('git add -A && git commit -m "recode_race() + recode_gender() fxn enhanced') ### --- SHELL if you remove system()
system('git add -A && git commit -m "recode_race() + recode_gender() fxn enhanced"') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
system('git add -A && git commit -m "recode_race() + recode_gender() fxn enhanced"') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "recode_race() + recode_gender() fxn enhanced"') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
devtools::install_github('srhoads/srhoads')
devtools::install_github('srhoads/srhoads', force=T)
git pull
devtools::install_github('srhoads/srhoads')
update.packages()
## AUTO INSTALL/IMPORT MAJOR DEPENDENCIES;
# --------------------------------------------
if(installIfNeeded <- F){
tryCatch({
if(!require("devtools")) install.packages("devtools")
library(devtools); cat("devtools dependency imported\n")
}, error=function(e) print("Couldn't install/import `devtools` package")
)
tryCatch({
if(!require("tidyverse")) install.packages("tidyverse")
library(tidyverse); cat("tidyverse dependency imported\n")
}, error=function(e) print("Couldn't install/import `tidyverse` package")
)
}
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "tried removing quanteda dependency bc it breaks with proxyC when deploying apps to RStudio Connect sometimes"') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
devtools::install_github('srhoads/srhoads')
srhoads::getMostRecentFiles()
library(srhoads)
library(tidyverse)
srhoads::getMostRecentFiles()
srhoads::getMostRecentFiles()[4:5]
system_open <- open_system <- function(paths){
lapply(paths, function(s){
cmdstr <- paste0('open ', s)
system(cmdstr)
})
}
srhoads::getMostRecentFiles()[4:5] %>% system_open()
{
if(verbose){cat("\n", "recode_jobgroup()", "\n")}
v <- recode_jobgroup_nums(v)
v <- gsub("1e\\+16", "1", v) %>% tolower() %>%
gsub("exe snr", "executive/senior", .) %>%
gsub("operatives.*", "operatives", .) %>%
gsub("laborers.*", "laborers and helpers", .)
if(component2){
v <- recode(tolower(v),
"1" = "1. Executive/Senior Level Officials and Managers", "1.0" = "1. Executive/Senior Level Officials and Managers",
"1.1" = "1. Executive/Senior Level Officials and Managers", "1.2" = "2. First/Mid-Level Officials and Managers", "2" = "3. Professionals", "3" = "4. Technicians", "4" = "5. Sales Workers", "5" = "6. Administrative Support Workers", "6" = "7. Craft Workers", "7" = "8. Operatives", "8" = "9. Laborers and Helpers", "9" = "10. Service Workers", "10" = "10. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers", "1.1 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "2. professionals" = "3. Professionals", "3. technicians" = "4. Technicians", "4. sales workers" = "5. Sales Workers", "5. administrative support workers" = "6. Administrative Support Workers", "6. craft workers" = "7. Craft Workers", "7. operatives" = "8. Operatives","8. laborers and helpers" = "9. Laborers and Helpers", "9. service workers" = "10. Service Workers", "10. service workers" = "10. Service Workers",
"executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers","first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "professionals" = "3. Professionals", "technicians" = "4. Technicians", "sales workers" = "5. Sales Workers", "administrative support workers" = "6. Administrative Support Workers", "craft workers" = "7. Craft Workers", "operatives" = "8. Operatives", "laborers and helpers" = "9. Laborers and Helpers", "service workers" = "10. Service Workers","not applicable" = "9999", "not reported" = "NA")
} else {
v <- recode(tolower(v),
"1" = "1.1 Executive/Senior Level Officials and Managers",
"1.0" = "1.1 Executive/Senior Level Officials and Managers",
"1.1" = "1.1 Executive/Senior Level Officials and Managers",
"1.2" = "1.2 First/Mid-Level Officials and Managers",
"2" = "2. Professionals",
"3" = "3. Technicians",
"4" = "4. Sales Workers",
"5" = "5. Administrative Support Workers",
"6" = "6. Craft Workers",
"7" = "7. Operatives",
"8" = "8. Laborers and Helpers",
"9" = "9. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.1 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "1.2 First/Mid-Level Officials and Managers",
"2. professionals" = "2. Professionals",
"3. technicians" = "3. Technicians",
"4. sales workers" = "4. Sales Workers",
"5. administrative support workers" = "5. Administrative Support Workers",
"6. craft workers" = "6. Craft Workers",
"7. operatives" = "7. Operatives",
"8. laborers and helpers" = "8. Laborers and Helpers",
"9. service workers" = "9. Service Workers",
"executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"first/mid-level officials and managers" = "1.2. First/Mid-Level Officials and Managers",
"professionals" = "2. Professionals",
"technicians" = "3. Technicians",
"sales workers" = "4. Sales Workers",
"administrative support workers" = "5. Administrative Support Workers",
"craft workers" = "6. Craft Workers",
"operatives" = "7. Operatives",
"laborers and helpers" = "8. Laborers and Helpers",
"service workers" = "9. Service Workers")
}
v <- ifelse(grepl('^1.*1.*000.*1', v),  "1.1 Executive/Senior Level Officials and Managers", v)
v <- na_if(v, "NA") # tools::toTitleCase(v) %>% as.factor()
return(v)
}
recode_jobgroup <- function(v, component2=F, verbose=F){
if(verbose){cat("\n", "recode_jobgroup()", "\n")}
v <- recode_jobgroup_nums(v)
v <- gsub("1e\\+16", "1", v) %>% tolower() %>%
gsub("exe snr", "executive/senior", .) %>%
gsub("operatives.*", "operatives", .) %>%
gsub("laborers.*", "laborers and helpers", .)
if(component2){
v <- recode(tolower(v),
"1" = "1. Executive/Senior Level Officials and Managers", "1.0" = "1. Executive/Senior Level Officials and Managers",
"1.1" = "1. Executive/Senior Level Officials and Managers", "1.2" = "2. First/Mid-Level Officials and Managers", "2" = "3. Professionals", "3" = "4. Technicians", "4" = "5. Sales Workers", "5" = "6. Administrative Support Workers", "6" = "7. Craft Workers", "7" = "8. Operatives", "8" = "9. Laborers and Helpers", "9" = "10. Service Workers", "10" = "10. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers", "1.1 executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "2. professionals" = "3. Professionals", "3. technicians" = "4. Technicians", "4. sales workers" = "5. Sales Workers", "5. administrative support workers" = "6. Administrative Support Workers", "6. craft workers" = "7. Craft Workers", "7. operatives" = "8. Operatives","8. laborers and helpers" = "9. Laborers and Helpers", "9. service workers" = "10. Service Workers", "10. service workers" = "10. Service Workers",
"executive/senior level officials and managers" = "1. Executive/Senior Level Officials and Managers","first/mid-level officials and managers" = "2. First/Mid-Level Officials and Managers", "professionals" = "3. Professionals", "technicians" = "4. Technicians", "sales workers" = "5. Sales Workers", "administrative support workers" = "6. Administrative Support Workers", "craft workers" = "7. Craft Workers", "operatives" = "8. Operatives", "laborers and helpers" = "9. Laborers and Helpers", "service workers" = "10. Service Workers","not applicable" = "9999", "not reported" = "NA")
} else {
v <- recode(tolower(v),
"1" = "1.1 Executive/Senior Level Officials and Managers",
"1.0" = "1.1 Executive/Senior Level Officials and Managers",
"1.1" = "1.1 Executive/Senior Level Officials and Managers",
"1.2" = "1.2 First/Mid-Level Officials and Managers",
"2" = "2. Professionals",
"3" = "3. Technicians",
"4" = "4. Sales Workers",
"5" = "5. Administrative Support Workers",
"6" = "6. Craft Workers",
"7" = "7. Operatives",
"8" = "8. Laborers and Helpers",
"9" = "9. Service Workers", "9999" = "99",
"1.0 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.1 executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"1.2 first/mid-level officials and managers" = "1.2 First/Mid-Level Officials and Managers",
"2. professionals" = "2. Professionals",
"3. technicians" = "3. Technicians",
"4. sales workers" = "4. Sales Workers",
"5. administrative support workers" = "5. Administrative Support Workers",
"6. craft workers" = "6. Craft Workers",
"7. operatives" = "7. Operatives",
"8. laborers and helpers" = "8. Laborers and Helpers",
"9. service workers" = "9. Service Workers",
"executive/senior level officials and managers" = "1.1 Executive/Senior Level Officials and Managers",
"first/mid-level officials and managers" = "1.2. First/Mid-Level Officials and Managers",
"professionals" = "2. Professionals",
"technicians" = "3. Technicians",
"sales workers" = "4. Sales Workers",
"administrative support workers" = "5. Administrative Support Workers",
"craft workers" = "6. Craft Workers",
"operatives" = "7. Operatives",
"laborers and helpers" = "8. Laborers and Helpers",
"service workers" = "9. Service Workers")
}
v <- ifelse(grepl('^1.*1.*000.*1', v),  "1.1 Executive/Senior Level Officials and Managers", v)
v <- na_if(v, "NA") # tools::toTitleCase(v) %>% as.factor()
return(v)
}
dbDriver
RPostgres::dbDriver
RPostgres::dbDriver("PostgreSQL")
RPostgres::dbDriver("PostgreSQL") %>% class()
DBI::dbListConnections
(DBI::dbDriver("PostgreSQL")
)
drivername='PostgreSQL'
(cons <- DBI::dbListConnections(DBI::dbDriver(drivername))); # RPostgres::dbDisconnect(cons[[3]])
fun
as_numeric <- function(v, suppresswarnings=T){
if(suppresswarnings){
v_ <- suppressWarnings(readr::parse_number(as.character(v)))
} else {
v_ <- readr::parse_number(as.character(v))
}
return(v_)
}
dbSendQuery
postgresqlCloseResult
RPostgreSQL::postgresqlCloseResult
library(RPostgres)
library(RPostgreSQL)
install.packages('PostgreSQL')
install.packages('PostgresSQL')
install.packages('postgreSQL')
DBI::postgresqlCloseResult
#' Samantha Rhoads's function to change one record of one variable in a SQL database (jlcentric)
#' @export
#' @examples
#' edit_client_name(con, table='clientmanagement_client', CLIENT_NAME_TO_RENAME = "GROSSOLDNAME", CLIENT_NAME_NEW = "PLEASEWORKCOOLNAME")
edit_client_name <- function(con, table='clientmanagement_client', CLIENT_NAME_TO_RENAME = "GROSSOLDNAME", CLIENT_NAME_NEW = "PLEASEWORKCOOLNAME"){
pkg('RPostgreSQL')
UPDATE_ROW_QUERY <- paste0("update ", table, " set client_name='", CLIENT_NAME_NEW, "' WHERE client_name='", CLIENT_NAME_TO_RENAME, "'")
update <- DBI::dbSendQuery(con, UPDATE_ROW_QUERY)
postgresqlCloseResult(update)
}
recode
`%>%`
`%>%` <- magrittr::`%>%`
`%>%`
roxygen2::roxygenise(clean=T)
rm(list=ls())
.rs.restartR()
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R fxns added from censuscodeassign; python fxns cleanup+added from diversity-planning-project; other cleanup R/Python"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
sample_n
srhoads::geocode_by_cell('1156 Susan Way Sunnyvale, CA')
#' Samantha Rhoads's function to...
#'
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#' geocode_by_cell()
geocode_by_cell <- function(v, replacewith=NULL) lapply(v, function(s){
# srhoads::geocode_by_cell('1156 Susan Way Sunnyvale, CA')
# install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
if(is.null(replacewith)) replacewith <- s
# tryCatch(geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_str_strip_NAs() %>% gsub(",", ", ", .) %>% trimws_(), error=function(e) s)
tryCatch(ggmap::geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_unique_sep(., ", ") %>% na_if_(), error=function(e) {cat('\n#geocode_by_cell() ERROR:\n'); print(e); replacewith})
}) %>% unlist()
geocode_by_cell('1156 Susan Way Sunnyvale, CA')
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
rm(list=ls())
.rs.restartR()
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
#' Samantha Rhoads's function to...
#'
#' Srhoads wrote this to allow you to...
#' @export
#' @examples {geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')}
#' geocode_by_cell()
geocode_by_cell <- function(v, replacewith=NULL) lapply(v, function(s){
# install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
if(is.null(replacewith)) replacewith <- s
# tryCatch(geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_str_strip_NAs() %>% gsub(",", ", ", .) %>% trimws_(), error=function(e) s)
tryCatch(ggmap::geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_unique_sep(., ", ") %>% na_if_(), error=function(e) {cat('\n#geocode_by_cell() ERROR:\n'); print(e); replacewith})
}) %>% unlist()
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
library(srhoads)
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
packageVersion('ggmap')
#' Samantha Rhoads's function to...
#'
#' Srhoads wrote this to allow you to...
#' @export
#' @examples {geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')}
#' geocode_by_cell()
geocode_by_cell <- function(v, replacewith=NULL) lapply(v, function(s){
## ggmap VERSION NEEDED ():
# {install.packages('ggmap', repos = 'https://cran.microsoft.com/snapshot/2019-02-01/')}
if(is.null(replacewith)) replacewith <- s
# tryCatch(geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_str_strip_NAs() %>% gsub(",", ", ", .) %>% trimws_(), error=function(e) s)
tryCatch(ggmap::geocode(s, source="dsk") %>% unlist() %>% paste0(., collapse=", ") %>% clean_unique_sep(., ", ") %>% na_if_(), error=function(e) {cat('\n#geocode_by_cell() ERROR:\n'); print(e); replacewith})
}) %>% unlist()
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
install.packages("https://cran.r-project.org/src/contrib/Archive/ggmap/ggmap_2.6.1.tar.gz", type="source", repos=NULL); .rs.restartR(); library(ggmap)
install.packages("https://cran.r-project.org/src/contrib/Archive/ggmap/ggmap_2.6.1.tar.gz", type="source", repos=NULL); .rs.restartR(); library(ggmap)
library(srhoads)
geocode_by_cell('1156 Susan Way Sunnyvale, CA 94087')
geocode_by_cell('Palo Alto')
geocode_by_cell('Santa Clara, CA')
geocode_by_cell('Stanford')
datatable
srhoads::getMostRecentFiles
#' Samantha Rhoads's function to take an Excel 5-digit date (or many digit datetime like '43467 381058125') + turn it into a date format
#' @export
#' @examples
#' excelToDateIf5DigitStrAndManyDigitTime(v)
excelToDateIf5DigitStrAndManyDigitTime <- function(v){ # ie: "43467 381058125"...or... "43467 402791006942"
if(
all(
unique(nchar(na.omit(
v %>% word(1) %>% gsub("[^[:digit:]]", "", .)
)))==5
) & all(
unique(nchar(na.omit(
v %>% word(2) %>% gsub("[[:digit:]]", "", .)
)))==0
)
){
v <- word(v, 1)
v <- lubridate::date(janitor::excel_numeric_to_date(as.numeric(v)))
} else {
if(any(grepl("\\.", v))&!is.Date.class(v)){
v <- gsub("\\.", " ", v)
v <- word(v, 1)
v <- tryCatch(lubridate::date(janitor::excel_numeric_to_date(as.numeric(v))), error=function(e) v)
}
}
v
}
excelToDateIf5DigitStrAndManyDigitTime('39328473')
excelToDateIf5DigitStrAndManyDigitTime('39328473333')
excelToDateIf5DigitStrAndManyDigitTime('39334')
excelToDateIf5DigitStrAndManyDigitTime('43467 381058125')
qdapRegex::rm_
zipcode5
zipcode5('329843902jdj239eu')
zipcode5('329843')
zipcode5('32984')
zipcode5('32984-eijf')
zipcode5('32984-1234')
zipcode5('32984-12345')
v <- c('924832sjkhf',' 20439-22912', '93488-9293', '23984_93284', '39842-3949 32432', '328rjd2 nh22 22242 ')
gsub('"(?<!\\d)\\d{5}(?!\\d)"', "", v)
gsub("(?<!\\d)\\d{5}(?!\\d)", "", v)
pattern="(?<!\\d)\\d{5}(?!\\d)"
gsub(pattern, "", v)
pattern="(?<!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(pattern, v)
pattern="(?<!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(pattern, v)
pattern="(?!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(pattern, v)
gsub("(?<!\\d)\\d{5}(?!\\d)", "", v)
gsub("(?!\\d)\\d{5}(?!\\d)", "", v)
gsub("(?\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?\\d)", "", v)
gsub("(\\d)\\d{5}(\\d)", "", v)
gsub("(?<!\\d)\\d{5}(?\\d)", "", v)
gsub("(?<!\\d)\\d{5}(!\\d)", "", v)
gsub("(<!\\d)\\d{5}(?!\\d)", "", v)
gsub("(<\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?!\\d)", "", v)
gsub("(\\d)\\d{5}(?\\d)", "", v)
gsub("(\\d)\\d{5}(!\\d)", "", v)
gsub("(<!\\d)\\d{5}(?!\\d)", "", v)
gsub("(<!\\d)\\d{5}(!\\d)", "", v)
gsub("(<!\\d)\\d{5}(!?\\d)", "", v)
gsub("(<?!\\d)\\d{5}(!?\\d)", "", v)
gsub("(?<!\\d)\\d{5}(!?\\d)", "", v)
gsub("?(<!\\d)\\d{5}(!?\\d)", "", v)
pattern="(<!\\d)\\d{5}(!\\d)"
stringr::str_extract_all(pattern, v)
pattern="\\d{5}(!\\d)"
stringr::str_extract_all(pattern, v)
pattern="\\d{5}(\\d)"
stringr::str_extract_all(pattern, v)
pattern="\\d{5}"
stringr::str_extract_all(pattern, v)
stringr::str_extract_all
stringr::str_extract_all(v, pattern)
pattern="(?<!\\d)\\d{5}(?!\\d)"
stringr::str_extract_all(v, pattern)
stringr::str_extract_all(v, pattern="(?<!\\d)\\d{5}(?!\\d)")
grDevices::axisTicks
.rs.restartR()
rm(list=ls())
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R/Python fxns cleanup"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
sprintf
dbDisconnect
DBI::dbDisconnec
DBI::dbDisconnect
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R/Python fxns cleanup; rm_ds_store() fxn written"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
roxygen2::roxygenise(clean=T)
devtools::document() # {roxygen2::roxygenise(clean=T)}
system('git add -A && git commit -m "R/Python fxns cleanup; rm_ds_store() fxn written"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
