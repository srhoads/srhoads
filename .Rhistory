gsub
#' A function to do gsub() but ignoring case as default & pasting a vec instead of just a string
#'
#' This function allows you to do gsub() but ignoring case as default & pasting a vec instead of just a string
#'
#' @export
#' @examples
#' gsubic(pattern, to, v, exact=F, ignore.case=T)
gsub_ic <- function (pattern, replacement, x, ignore.case=T, perl = FALSE,
fixed = FALSE, useBytes = FALSE, exact=F)
{
pattern <- paste_regex(pattern, exact=exact)
if (!is.character(x))
x <- as.character(x)
.Internal(gsub(as.character(pattern), as.character(replacement),
x, ignore.case, perl, fixed, useBytes))
}
gsub_ic("; ", " stinky ", "kdfjhsd f; dsjkfhs")
gsub_ic(";I ", " stinky ", "kdfjhsd f;i dsjkfhs")
#' A function to do gsub() but ignoring case as default & pasting a vec instead of just a string
#'
#' This function allows you to do gsub() but ignoring case as default & pasting a vec instead of just a string
#'
#' @export
#' @examples
#' gsubic(pattern, to, v, exact=F, ignore.case=T)
gsub_ic <- function (pattern, replacement, x, ignore.case=T, perl = FALSE,
fixed = FALSE, useBytes = FALSE, exact=F) {
pattern <- paste_regex(pattern, exact=exact)
if (!is.character(x))
x <- as.character(x)
.Internal(gsub(as.character(pattern), as.character(replacement),
x, ignore.case, perl, fixed, useBytes))
}
gsub_ic(";I ", " stinky ", "kdfjhsd f;i dsjkfhs")
docu <- function(fxn=""){
cat(eval("
#' Samantha Rhoads's function to...
#'
#' Srhoads wrote this to allow you to...
#' @export
#' @examples
#'"), paste0(fxn, "()"))
}
docu()
openintro::abbr2state
openintro::abbr2state(c("NY", "jdkhf", "CA", NA))
statetoabb <- function (v) state.abb[match(tolower(v), tolower(state.name))]
openintro::abbr2state(c("NY", "jdkhf", "CA", NA)) %>% edit()
statetoabb(c("New York", "dsjkfhds", "California", NA))
statetoabb(c("New york", "dsjkfhds", "California", NA))
strippunct
strip_punct
statetoabb <- function (v) state.abb[match(strip_punct(tolower(v)), strip_punct(tolower(state.name)))]
statetoabb(c("New york", "dsjkfhds", "California", NA))
statetoabb(c("New yo-rk", "dsjkfhds", "California", NA))
statetoabb(c("New yo.rk", "dsjkfhds", "California", NA))
state.abb[match(strip_punct(tolower(c("New yo.rk", "dsjkfhds", "California", NA))), strip_punct(tolower(state.name)))]
strip_punct(tolower(c("New yo.rk", "dsjkfhds", "California", NA))
)
strip_punct
strip_punct("skjdfhds. erh, ewr  ---kdjsfhs d..")
strip_punct
strip_punct <- function(v, replacewithspace=T, replacewith=NULL, onlyends=F) {
if(replacewithspace) replacement <- " " else replacement <- ""
if(!is.null(replacewith)) replacement <- replacewith
if(onlyends) v <- gsub('^[[:punct:] ]+|[[:punct:]]+$', replacement, v) else gsub('[[:punct:] ]+', replacement, v)
trimws_(v)
}
strip_punct(c("this..punct", "this . . punct", "this. .punct", "this. . punct", "this . .punct",
"this ; .punct", "this . ;punct", "this . .punct", "this . .punct"))
strip_punct <- function(v, replacewithspace=T, replacewith=NULL, onlyends=F) {
if(replacewithspace) replacement <- " " else replacement <- ""
if(!is.null(replacewith)) replacement <- replacewith
if(onlyends) v <- gsub('^[[:punct:] ]+|[[:punct:]]+$', replacement, v) else gsub('([[:punct:]])', replacement, v)
trimws_(v)
}
strip_punct(c("this..punct", "this . . punct", "this. .punct", "this. . punct", "this . .punct", "this ; .punct", "this . ;punct", "this . .punct", "this . .punct"))
v
v <- c("this..punct", "this . . punct", "this. .punct", "this. . punct", "this . .punct", "this ; .punct", "this . ;punct", "this . .punct", "this . .punct")
replacement <- " "
gsub('([[:punct:]])', replacement, v)
strip_punct <- function(v, replacewithspace=T, replacewith=NULL, onlyends=F) {
if(replacewithspace) replacement <- " " else replacement <- ""
if(!is.null(replacewith)) replacement <- replacewith
if(onlyends) v <- gsub('^[[:punct:] ]+|[[:punct:]]+$', replacement, v) else gsub('([[:punct:]])', replacement, v)
trimws_(v)
}
strip_punct(c("this..punct", "this . . punct", "this. .punct", "this. . punct", "this . .punct", "this ; .punct", "this . ;punct", "this . .punct", "this . .punct"))
replacement <- " "
strip_punct(c("this..punct", "this . . punct", "this. .punct", "this. . punct", "this . .punct", "this ; .punct", "this . ;punct", "this . .punct", "this . .punct"))
replacement <- " "
strip_punct <- function(v, replacewithspace=T, replacewith=NULL, onlyends=F) {
if(replacewithspace) replacement <- " " else replacement <- ""
if(!is.null(replacewith)) replacement <- replacewith
if(onlyends) v <- gsub('^[[:punct:] ]+|[[:punct:]]+$', replacement, v) else v <- gsub('([[:punct:]])', replacement, v)
trimws_(v)
}
strip_punct(c("this..punct", "this . . punct", "this. .punct", "this. . punct", "this . .punct", "this ; .punct", "this . ;punct", "this . .punct", "this . .punct"))
strip_punct <- function(v, replacewithspace=T, replacewith=NULL, onlyends=F) {
if(replacewithspace) replacement <- " " else replacement <- ""
if(!is.null(replacewith)) replacement <- replacewith
if(onlyends) v <- gsub('^[[:punct:] ]+|[[:punct:]]+$', replacement, v) else v <- gsub('[[:punct:] ]+', replacement, v)
trimws_(v)
}
strip_punct(c("this..punct", "this . . punct", "this. .punct", "this. . punct", "this . .punct"
)
)
statetoabb <- function (v) state.abb[match(strip_punct(tolower(v)), strip_punct(tolower(state.name)))]
state.abb[match(strip_punct(tolower(c("New yo.rk", "dsjkfhds", "California", NA))), strip_punct(tolower(state.name)))]
strip_punct(tolower(c("New yo.rk", "dsjkfhds", "California", NA))
)
state.abb[match(strip_punct(tolower(c("New yo.rk", "dsjkfhds", "California", NA)), replacewithspace=F), strip_punct(tolower(state.name)), replacewithspace=F)]
state.abb[match(strip_punct(tolower(c("New yo.rk", "dsjkfhds", "California", NA), replacewithspace=F)), strip_punct(tolower(state.name), replacewithspace=F))]
strip_punct("jkfdsh.dfd", replacewithspace = F)
statetoabb <- function (v) state.abb[match(strip_punct(tolower(v), replacewithspace=F), strip_punct(tolower(state.name), replacewithspace=F))]
statetoabb(c("New yo.rk", "dsjkfhds", "California", NA))
openintro::abbr2state(c("N.Y.", "jdkhf", "CA", NA))
abbtostate <- function (v) state.name[match(strip_punct(tolower(v), replacewithspace=F), strip_punct(tolower(state.abb), replacewithspace=F))]
abbtostate(c("N.Y.", "jdkhf", "CA", NA))
openintro::abbr2state
state.abb
state.name
c("Alabama", "Alaska", "Arizona", "Kansas", "Utah",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Arkansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota",
"Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia")
statetoabb <- function (v) {
v <- strip_punct(tolower(v), replacewithspace=F)
st <- c("Alabama", "Alaska", "Arizona", "Kansas", "Utah",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Arkansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota",
"Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia") %>% tolower() %>% strip_punct(., replacewithspace=F)
ab <- c("AL", "AK", "AZ", "KS", "UT", "CO", "CT",
"DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "AR",
"KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO",
"MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND",
"OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"CA", "VT", "VA", "WA", "WV", "WI", "WY", "DC")
ab[match(v, st)]
}
statetoabb(c("New yo.rk", "dsjkfhds", "California", NA))
abbtostate <- function (v) {
v <- strip_punct(tolower(v), replacewithspace=F)
st <- c("Alabama", "Alaska", "Arizona", "Kansas", "Utah",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Arkansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota",
"Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia")
ab <- c("AL", "AK", "AZ", "KS", "UT", "CO", "CT",
"DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "AR",
"KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO",
"MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND",
"OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"CA", "VT", "VA", "WA", "WV", "WI", "WY", "DC") %>% tolower() %>% strip_punct(., replacewithspace=F)
st[match(v, ab)]
}
abbtostate(c("N.Y.", "jdkhf", "CA", NA))
openintro::abbr2state(c("N.Y.", "jdkhf", "CA", NA))
state2abbr_or_abbr2state <- function(vec) {
(statenameabbpasteddf <- data.frame(statenameabbpasted = paste0(state.name, "; -- ", state.abb), state.name_new = state.name))
(vecd <- tibble(statenameabbpasted = vec, vec=vec))
(vec <- left_join(vecd, statenameabbpasteddf) %>%
mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
# vec <- gsub("[^,|-| |[:alnum:]]", "", vec, perl = T)
newabb <- statetoabb(vec)
newst <- abbtostate(vec)
# newabb <- openintro::state2abbr(vec)
# newst <- openintro::abbr2state(vec)
newnewst <- abbtostate(newabb)
# newnewst <- openintro::abbr2state(newabb)
vec <- ifelse(is.na(newst), newnewst, newst) %>%
ifelse(is.na(.), as.character(vec), .)
vec
}
state2region <- function(v_abbr){
v_abbr <- state2abbr_or_abbr2state()
vdf <- tibble(state.abb = tolower(v_abbr))
regdf <- tibble(state.region, state.abb= tolower(state.abb)) %>% left_join(vdf, .)
regdf$state.region[grepl("vt|dc", regdf$state.abb)] <- "Northeast"
regdf$state.region[grepl("pr|gu|nmari", regdf$state.abb)] <- "Other"
regdf$state.region
}
state2region("NY")
state2region <- function(v_abbr){
v_abbr <- state2abbr_or_abbr2state(v_abbr)
vdf <- tibble(state.abb = tolower(v_abbr))
regdf <- tibble(state.region, state.abb= tolower(state.abb)) %>% left_join(vdf, .)
regdf$state.region[grepl("vt|dc", regdf$state.abb)] <- "Northeast"
regdf$state.region[grepl("pr|gu|nmari", regdf$state.abb)] <- "Other"
regdf$state.region
}
state2region("NY")
v_abbr="NY"
(v_abbr <- state2abbr_or_abbr2state(v_abbr))
state2abbr_or_abbr2state
state2region("New York")
state2abbr_or_abbr2state("New York")
vec <- "NY"
(statenameabbpasteddf <- data.frame(statenameabbpasted = paste0(state.name, "; -- ", state.abb), state.name_new = state.name))
state.name <- c("Alabama", "Alaska", "Arizona", "Kansas", "Utah",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Arkansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota",
"Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia")
state.abb <- c("AL", "AK", "AZ", "KS", "UT", "CO", "CT",
"DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "AR",
"KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO",
"MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND",
"OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"CA", "VT", "VA", "WA", "WV", "WI", "WY", "DC")
(statenameabbpasteddf <- data.frame(statenameabbpasted = paste0(state.name, "; -- ", state.abb), state.name_new = state.name))
(vecd <- tibble(statenameabbpasted = vec, vec=vec))
(vec <- left_join(vecd, statenameabbpasteddf) %>%
mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
(vec <- left_join(vecd, statenameabbpasteddf) %>% mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
newabb <- statetoabb(vec)
newst <- abbtostate(vec)
newnewst <- abbtostate(newabb)
vec <- ifelse(is.na(newst), newnewst, newst) %>% ifelse(is.na(.), as.character(vec), .)
vec
newst
newnewst
newst
newnewst
statetoabb(vec)
state2abbr_or_abbr2state <- function(vec, abb=F) {
state.name <- c("Alabama", "Alaska", "Arizona", "Kansas", "Utah",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Arkansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota",
"Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia")
state.abb <- c("AL", "AK", "AZ", "KS", "UT", "CO", "CT",
"DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "AR",
"KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO",
"MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND",
"OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"CA", "VT", "VA", "WA", "WV", "WI", "WY", "DC")
(statenameabbpasteddf <- data.frame(statenameabbpasted = paste0(state.name, "; -- ", state.abb), state.name_new = state.name))
(vecd <- tibble(statenameabbpasted = vec, vec=vec))
(vec <- left_join(vecd, statenameabbpasteddf) %>% mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
newabb <- statetoabb(vec)
newst <- abbtostate(vec)
newnewst <- abbtostate(newabb)
vec <- ifelse(is.na(newst), newnewst, newst) %>% ifelse(is.na(.), as.character(vec), .)
if(!abb) vec
else statetoabb(vec)
}
state2abbr_or_abbr2state("New York")
vecd
tibble
(vecd <- tibble(statenameabbpasted=as.character(vec), vec=vec))
(vec <- left_join(vecd, statenameabbpasteddf) %>% mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
(vecd <- tibble(statenameabbpasted=as.character(vec), vec=as.character(vec)))
(vec <- left_join(vecd, statenameabbpasteddf) %>% mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
tibble
(vecd <- data.frame(statenameabbpasted=vec, vec=vec, stringsAsFactors=F))
(vec <- left_join(vecd, statenameabbpasteddf) %>% mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
statenameabbpasteddf
(statenameabbpasteddf <- data.frame(statenameabbpasted = paste0(state.name, "; -- ", state.abb), state.name_new = state.name, stringsAsFactors=F))
(vecd <- data.frame(statenameabbpasted=vec, vec=vec, stringsAsFactors=F))
(vec <- left_join(vecd, statenameabbpasteddf) %>% mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>% .$statenameabbpasted)
newabb <- statetoabb(vec)
newst <- abbtostate(vec)
(newabb <- statetoabb(vec))
(newst <- abbtostate(vec))
(vec <- left_join(vecd, statenameabbpasteddf) %>%
mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>%
.$statenameabbpasted)
statetoabb("NY")
(statenameabbpasteddf <- data.frame(statenameabbpasted = paste0(state.name, "; -- ", state.abb),
state.name_new = state.name, stringsAsFactors=F))
(vecd <- data.frame(statenameabbpasted=vec, vec=vec, stringsAsFactors=F))
(vec <- left_join(vecd, statenameabbpasteddf) %>%
mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>%
.$statenameabbpasted)
(newabb <- statetoabb(vec))
(newst <- abbtostate(vec))
newnewst <- abbtostate(newabb)
vec <- ifelse(is.na(newst), newnewst, newst) %>% ifelse(is.na(.), as.character(vec), .)
state2abbr_or_abbr2state <- function(vec, abb=F) {
state.name <- c("Alabama", "Alaska", "Arizona", "Kansas", "Utah",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Arkansas",
"Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota",
"Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia")
state.abb <- c("AL", "AK", "AZ", "KS", "UT", "CO", "CT",
"DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "AR",
"KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO",
"MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND",
"OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"CA", "VT", "VA", "WA", "WV", "WI", "WY", "DC")
(statenameabbpasteddf <- data.frame(statenameabbpasted = paste0(state.name, "; -- ", state.abb),
state.name_new = state.name, stringsAsFactors=F))
(vecd <- data.frame(statenameabbpasted=vec, vec=vec, stringsAsFactors=F))
(vec <- left_join(vecd, statenameabbpasteddf) %>%
mutate(statenameabbpasted = ifelse(is.na(state.name_new), statenameabbpasted, state.name_new)) %>%
.$statenameabbpasted)
(newabb <- statetoabb(vec))
(newst <- abbtostate(vec))
newnewst <- abbtostate(newabb)
vec <- ifelse(is.na(newst), newnewst, newst) %>% ifelse(is.na(.), as.character(vec), .)
if(!abb) vec
else statetoabb(vec)
}
state2abbr_or_abbr2state("New York")
state2abbr_or_abbr2state("New York", abb=T)
vec <- c("New York", "NY", "N.Y.", "new, york", "ny,")
state2abbr_or_abbr2state(vec, abb=T)
vec <- c("New York", "NY", "N.Y.", "new, york", "ny,", "kjlshfd")
state2abbr_or_abbr2state(vec, abb=T)
statetoabb(vec)
abb2state(vec)
abbtostate(vec)
statetoabb(vec)
abbtostate(vec)
statetoabb(vec) %>% abbtostate()
abbtostate(vec)
ifelse(is.na(st1), st2, st1)
st1 <- statetoabb(vec) %>% abbtostate()
st2 <- abbtostate(vec)
ifelse(is.na(st1), st2, st1)
state2abb_or_abb2state <- function(v, abb=F){
st1 <- statetoabb(vec) %>% abbtostate()
st2 <- abbtostate(vec)
if(!abb) ifelse(is.na(st1), st2, st1) else statetoabb(ifelse(is.na(st1), st2, st1))
}
state2abb_or_abb2state(vec, abb=T)
state2abb_or_abb2state(vec, abb=F)
state2abb_or_abb2state <- function(v, abb=F){
st1 <- statetoabb(vec) %>% abbtostate()
st2 <- abbtostate(vec)
if(!abb) ifelse(is.na(st1), st2, st1) else statetoabb(ifelse(is.na(st1), st2, st1))
}
(v_abbr <- state2abb_or_abb2state(v_abbr, abb=T))
v_abbr <- c("New York", "ny", "n.y,")
state2abb_or_abb2state(v_abbr, abb=T)
state2abb_or_abb2state <- function(v, abb=F){
st1 <- statetoabb(v) %>% abbtostate()
st2 <- abbtostate(v)
if(!abb) ifelse(is.na(st1), st2, st1) else statetoabb(ifelse(is.na(st1), st2, st1))
}
state2abb_or_abb2state(v_abbr, abb=T)
state2abb_or_abb2state(v_abbr
)
(v_abbr <- state2abb_or_abb2state(v_abbr, abb=T))
state.region
regdf <- tibble(c(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .)
state2region <- function(v_abbr){
(v_abbr <- state2abb_or_abb2state(v_abbr, abb=T))
vdf <- tibble(state.abb = tolower(v_abbr))
regdf <- tibble(c(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .)
regdf$state.region[grepl("vt|dc", regdf$state.abb)] <- "Northeast"
regdf$state.region[grepl("pr|gu|nmari", regdf$state.abb)] <- "Other"
regdf$state.region
}
state2region(v_abbr="NY")
state.region <- structure(c(2L, 4L, 4L, 2L, 4L, 4L, 1L, 2L, 2L, 2L, 4L, 4L, 3L,
3L, 3L, 3L, 2L, 2L, 1L, 2L, 1L, 3L, 3L, 2L, 3L, 4L, 3L, 4L, 1L,
1L, 4L, 1L, 2L, 3L, 3L, 2L, 4L, 1L, 1L, 2L, 3L, 2L, 2L, 4L, 1L,
2L, 4L, 2L, 3L, 4L), .Label = c("Northeast", "South", "North Central",
"West"), class = "factor")
c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA",
"HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA",
"MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"UT", "VT", "VA", "WA", "WV", "WI", "WY") -> state.abb
state.name <- c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado",
"Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho",
"Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana",
"Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
"Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota",
"Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas", "Utah",
"Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin",
"Wyoming")
(v_abbr <- state2abb_or_abb2state(v_abbr, abb=T))
vdf <- tibble(state.abb = tolower(v_abbr))
regdf <- tibble(c(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .)
(regdf <- tibble(c(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .))
regdf$state.region[grepl("vt|dc", regdf$state.abb)] <- "Northeast"
regdf$state.region[grepl("pr|gu|nmari", regdf$state.abb)] <- "Other"
regdf$state.region
vdf
tibble(c(state.region), state.abb= tolower(state.abb))
state.region
(regdf <- tibble(state.region=c(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .))
state.region=c(state.region)
state.region
state.region <- structure(c(2L, 4L, 4L, 2L, 4L, 4L, 1L, 2L, 2L, 2L, 4L, 4L, 3L,
3L, 3L, 3L, 2L, 2L, 1L, 2L, 1L, 3L, 3L, 2L, 3L, 4L, 3L, 4L, 1L,
1L, 4L, 1L, 2L, 3L, 3L, 2L, 4L, 1L, 1L, 2L, 3L, 2L, 2L, 4L, 1L,
2L, 4L, 2L, 3L, 4L), .Label = c("Northeast", "South", "North Central",
"West"), class = "factor")
(regdf <- tibble(state.region=as.character(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .))
regdf$state.region[grepl("vt|dc", regdf$state.abb)] <- "Northeast"
regdf$state.region[grepl("pr|gu|nmari", regdf$state.abb)] <- "Other"
regdf$state.region
(v_abbr <- state2abb_or_abb2state(v_abbr, abb=T))
vdf <- tibble(state.abb = tolower(v_abbr))
(regdf <- tibble(state.region=as.character(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .))
regdf$state.region[grepl("vt|dc", regdf$state.abb)] <- "Northeast"
regdf$state.region[grepl("pr|gu|nmari", regdf$state.abb)] <- "Other"
regdf$state.region
state2region <- function(v_abbr){
(v_abbr <- state2abb_or_abb2state(v_abbr, abb=T))
vdf <- tibble(state.abb = tolower(v_abbr))
(regdf <- tibble(state.region=as.character(state.region), state.abb= tolower(state.abb)) %>% left_join(vdf, .))
regdf$state.region[grepl("vt|dc", regdf$state.abb)] <- "Northeast"
regdf$state.region[grepl("pr|gu|nmari", regdf$state.abb)] <- "Other"
regdf$state.region
}
state2region(v_abbr="NY")
state2region(v_abbr="dc")
state2region(v_abbr="d.c.")
state2region(v_abbr="d.c.")
docu
docu()
redocument=T
if(redocument){
devtools::document()
system('git add -A && git commit -m "_"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
}
devtools::document()
system('git add -A && git commit -m "_"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
# July 9, 2019 (07092019) _ ########################################################################################################################
docu()
library(srhoads)
# July 9, 2019 (07092019) _ ########################################################################################################################
docu()
#' Samantha Rhoads's function to split a string between a lowercase and capital letter, as long as the letter after the uppercase one is a lowercase letter
#'
#' Srhoads wrote this to allow you to split a string between a lowercase and capital letter, as long as the letter after the uppercase one is a lowercase letter (loosly means you don't need the letter after the capital letter to be lowercase)
#' @export
#' @examples
#' split_before_capital()
split_before_capital <- function(x, sep=" ", loosly=F) if(!loosly) gsub('([[:lower:]])([[:upper:]])([[:lower:]])', paste0('\\1', sep, '\\2\\3'), x) else gsub('([[:lower:]])([[:upper:]])', paste0('\\1', sep, '\\2'), x)
devtools::document()
system('git add -A && git commit -m "_"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
devtools::document()
system('git add -A && git commit -m "new functions added/edited"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
devtools::install_github('srhoads/srhoads', force=T)
library(srhoads)
srhoads::col_types
srhoads::pkg2
devtools::document()
system('git add -A && git commit -m "new functions added/edited"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
srhoads::pkg3
srhoads::pkg2
devtools::document()
system('git add -A && git commit -m "new functions added/edited the pkg2 issue, plus pkg3 now, trying to switch changing pkg2 to pkg_old and then pkg3 to pkg2"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
devtools::document()
system('git add -A && git commit -m "new functions added/edited the pkg2 issue, plus pkg3 now, trying to switch changing pkg2 to pkg_old and then pkg3 to pkg2.evenmore issues. using pkg4 now and NO pkg2 at all"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
devtools::document()
system('git add -A && git commit -m "last time i renamed pkg2 to pkg4. now re-renaming it back to pkg2 in hopes that it'll update itself"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
devtools::document()
system('git add -A && git commit -m "last time i renamed pkg2 to pkg4. now re-renaming it back to pkg2 in hopes that twill update itself"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
srhoads::pkg2
identical(pkg4, pkg3)
identical(pkg2, pkg3)
identical(pkg_old, pkg3)
devtools::document()
system('git add -A && git commit -m "last time i renamed pkg2 to pkg4. now re-renaming it back to pkg2 in hopes that twill update itself"; git push') ### --- SHELL if you remove system()
devtools::install_github('srhoads/srhoads')
